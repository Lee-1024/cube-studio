{"version":3,"file":"static/js/47.66a4c6f2.chunk.js","mappings":"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","sources":["components/TitleHeader/TitleHeader.tsx","components/TableBox/TableBox.tsx","components/ModalForm/ModalForm.tsx","api/kubeflowApi.ts","components/MixSearch/MixSearch.tsx","pages/ADUGTemplate.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport { Row, Typography, Col, Space } from 'antd';\nimport './TitleHeader.less';\n\nconst { Title } = Typography;\n\ninterface IProps {\n    title: ReactNode | string;\n    children?: ReactNode;\n    noBorderBottom?: boolean;\n    breadcrumbs?: ReactNode | string;\n}\n\nconst TitleHeader = (props: IProps) => {\n    const styles: React.CSSProperties = { position: 'sticky', top: 0 }\n    return (\n        <Row\n            className=\"title-header\"\n            justify=\"space-between\"\n            align=\"middle\"\n            style={props.noBorderBottom ? { borderBottom: 'none', ...styles } : styles}>\n            <div>\n                <Title className=\"d-il mr12\" level={5} style={{ marginBottom: 10 }}>\n                    {props.title}\n                </Title>\n                <div className=\"d-il\">\n                    {props.breadcrumbs}\n                </div>\n            </div>\n\n            <Col>\n                <Space>{props.children ? props.children : null}</Space>\n            </Col>\n        </Row>\n    );\n};\n\nexport default TitleHeader;\n","import React, { ReactNode, useEffect, useState } from 'react';\nimport { Row, Col, Space, Table, ConfigProvider, Button, Modal, Tabs, message, Checkbox } from 'antd';\nimport './TableBox.less';\nimport { TablePaginationConfig } from 'antd/lib/table/Table';\nimport emptyImg from '../../images/emptyBg.png';\nimport { GetRowKey, SorterResult, TableRowSelection } from 'antd/lib/table/interface';\nimport ExportJsonExcel from 'js-export-excel';\nimport { Resizable } from 'react-resizable';\n\nconst CopyToClipboard = require('react-copy-to-clipboard');\n\ninterface IProps {\n\tsize?: 'large' | 'middle' | 'small'\n\ttableKey?: string\n\trowKey?: string | GetRowKey<any>;\n\ttitleNode?: string | ReactNode;\n\tbuttonNode?: ReactNode;\n\tdataSource: any;\n\tcolumns: any;\n\tpagination?: false | TablePaginationConfig;\n\tscroll?:\n\t| ({\n\t\tx?: string | number | true | undefined;\n\t\ty?: string | number | undefined;\n\t} & {\n\t\tscrollToFirstRowOnChange?: boolean | undefined;\n\t})\n\t| undefined;\n\tloading?: boolean;\n\trowSelection?: TableRowSelection<any>;\n\tcancelExportData?: boolean;\n\tonChange?: (\n\t\tpagination: TablePaginationConfig,\n\t\tfilters: Record<string, (string | number | boolean)[] | null>,\n\t\tsorter: SorterResult<any> | SorterResult<any>[],\n\t) => void;\n}\n\nconst customizeRenderEmpty = () => (\n\t<Row justify=\"center\" align=\"middle\" style={{ height: 360, flexDirection: 'column' }}>\n\t\t<img src={emptyImg} style={{ width: 266 }} alt=\"\" />\n\t\t<div>暂无数据</div>\n\t</Row>\n);\n\nconst ResizableTitle = ({ onResize, width, ...restProps }: any) => {\n\tif (!width) {\n\t\treturn <th {...restProps} />;\n\t}\n\n\treturn (\n\t\t<Resizable\n\t\t\twidth={width}\n\t\t\theight={0}\n\t\t\thandle={\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"react-resizable-handle\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonResize={onResize}\n\t\t\tdraggableOpts={{ enableUserSelectHack: false }}\n\t\t>\n\t\t\t<th {...restProps} style={{ ...restProps?.style, userSelect: 'none' }} />\n\t\t</Resizable>\n\t);\n};\n\nconst TableBox = (props: IProps) => {\n\tconst [exportDataVisible, setExportDataVisible] = useState(false);\n\tconst [dataFormat, setDataFormat] = useState<{ header: any[]; data: any[] }>({\n\t\theader: [],\n\t\tdata: [],\n\t});\n\tconst [filterValue, setFilterValue] = useState<any[]>([]);\n\n\t// 可伸缩列设置\n\tconst [cols, setCols] = useState(props.columns);\n\tconst handleResize = (index: any) => {\n\t\treturn (_: any, { size }: any) => {\n\t\t\tif (size.width < 100) return\n\t\t\tconst temp = [...cols];\n\t\t\ttemp[index] = { ...temp[index], width: size.width };\n\t\t\tconst tableWidth = temp.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 200\n\t\t\tlocalStorage.setItem(props.tableKey || '', JSON.stringify(temp))\n\t\t\t// console.log(currentTableScroll, temp);\n\t\t\tsetCurrentTableScroll({ ...currentTableScroll, x: tableWidth })\n\t\t\tsetCols(temp);\n\t\t};\n\t};\n\tconst customColumns = cols.map((col: any, index: any) => {\n\t\treturn {\n\t\t\t...col,\n\t\t\twidth: col.width || 200,\n\t\t\tonHeaderCell: (column: any) => {\n\t\t\t\treturn {\n\t\t\t\t\twidth: column.width,\n\t\t\t\t\tonResize: handleResize(index),\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t});\n\tconst [currentTableScroll, setCurrentTableScroll] = useState(props.scroll)\n\n\tuseEffect(() => {\n\t\tsetCols(props.columns);\n\t}, [props.columns]);\n\n\tuseEffect(() => {\n\t\tsetCurrentTableScroll(props.scroll);\n\t}, [props.scroll]);\n\n\tuseEffect(() => {\n\t\tif (props.dataSource) {\n\t\t\tconst columns = props.columns.filter((item: any) => ~filterValue.indexOf(item.dataIndex));\n\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t}\n\t}, [props.dataSource, props.columns]);\n\n\tconst handdleFilterHeader = (dataColumns = [], data: any[]) => {\n\t\tconst columns = dataColumns.map((item: any) => item.dataIndex).filter((item: string) => item !== 'handle');\n\t\tconst sheetHeader = dataColumns.map((item: any) => item.title).filter((item: string) => item !== '操作');\n\t\tconst tarData: any = [];\n\n\t\tdata.forEach((dataRow: any) => {\n\t\t\tconst row: any = {};\n\t\t\tcolumns.map((colName: string) => {\n\t\t\t\tconst res = dataRow[colName];\n\t\t\t\trow[colName] = res || '';\n\t\t\t});\n\t\t\ttarData.push(row);\n\t\t});\n\n\t\tsetDataFormat({\n\t\t\theader: sheetHeader,\n\t\t\tdata: tarData,\n\t\t});\n\t};\n\n\tconst handleClickOutputExcel = () => {\n\t\tconst option: any = {};\n\t\toption.fileName = 'result';\n\t\toption.datas = [\n\t\t\t{\n\t\t\t\tsheetData: dataFormat.data,\n\t\t\t\tsheetName: 'sheet',\n\t\t\t\tsheetHeader: dataFormat.header,\n\t\t\t},\n\t\t];\n\t\tconst toExcel = new ExportJsonExcel(option);\n\t\ttoExcel.saveExcel();\n\t};\n\n\tconst handleExportJira = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\t'|' +\n\t\t\t\theader.join('|') +\n\t\t\t\t'|' +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\t'|' +\n\t\t\t\t\trowKey.join('|') +\n\t\t\t\t\t'|' +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\n\t\treturn str;\n\t};\n\n\tconst handleExportText = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\theader.join('\t') +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\trowKey.join('\t') +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\t\treturn str;\n\t};\n\n\treturn (\n\t\t<Space className=\"tablebox\" direction=\"vertical\" size=\"middle\">\n\t\t\t<Modal\n\t\t\t\twidth={1000}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tcentered={true}\n\t\t\t\tbodyStyle={{ maxHeight: 500, overflow: 'auto' }}\n\t\t\t\tvisible={exportDataVisible}\n\t\t\t\ttitle={'导出数据'}\n\t\t\t\tonCancel={() => {\n\t\t\t\t\tsetExportDataVisible(false);\n\t\t\t\t}}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div style={{ position: 'relative' }}>\n\t\t\t\t\t<div className=\"mb16\"><span className=\"pr8\">选择需要导出的列：</span><Checkbox.Group\n\t\t\t\t\t\toptions={props.columns\n\t\t\t\t\t\t\t.map((item: any) => ({ label: item.title, value: item.dataIndex }))\n\t\t\t\t\t\t\t.filter((item: any) => item.value !== 'handle')}\n\t\t\t\t\t\tdefaultValue={[]}\n\t\t\t\t\t\tvalue={filterValue}\n\t\t\t\t\t\tonChange={(values: any) => {\n\t\t\t\t\t\t\tsetFilterValue(values);\n\t\t\t\t\t\t\tconst columns = props.columns.filter((item: any) => ~values.indexOf(item.dataIndex));\n\t\t\t\t\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/></div>\n\t\t\t\t\t<div style={{ position: 'absolute', right: 0, bottom: 0 }}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue(\n\t\t\t\t\t\t\t\t\tprops.columns\n\t\t\t\t\t\t\t\t\t\t.map((item: any) => item.dataIndex)\n\t\t\t\t\t\t\t\t\t\t.filter((item: any) => item !== 'handle'),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\thanddleFilterHeader(props.columns, props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t全选\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue([]);\n\t\t\t\t\t\t\t\thanddleFilterHeader([], props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t反选\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Tabs>\n\t\t\t\t\t<Tabs.TabPane tab=\"Wiki格式\" key=\"jira\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportJira()} onCopy={() => message.success('已复制到粘贴板')}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportJira()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Text格式\" key=\"test\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportText()} onCopy={() => message.success('已复制到粘贴板')}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportText()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Excel格式\" key=\"excel\">\n\t\t\t\t\t\t<Row justify=\"center\" align=\"middle\" style={{ minHeight: 100 }}>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={handleClickOutputExcel}>\n\t\t\t\t\t\t\t\t\t导出Excel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t</Tabs>\n\t\t\t</Modal>\n\t\t\t{\n\t\t\t\tprops.titleNode || props.buttonNode || !props.cancelExportData ? <Row justify=\"space-between\" align=\"middle\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">{props.titleNode}</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">\n\t\t\t\t\t\t\t{props.buttonNode}\n\t\t\t\t\t\t\t{props.cancelExportData ? null : (\n\t\t\t\t\t\t\t\t<Button style={{ marginLeft: 6 }} onClick={() => setExportDataVisible(true)}>\n\t\t\t\t\t\t\t\t\t导出数据\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> : null\n\t\t\t}\n\t\t\t<ConfigProvider renderEmpty={customizeRenderEmpty}>\n\t\t\t\t<Table\n\t\t\t\t\tsize={props.size || 'middle'}\n\t\t\t\t\trowKey={props.rowKey ? props.rowKey : 'id'}\n\t\t\t\t\tdataSource={props.dataSource}\n\t\t\t\t\t// columns={props.columns}\n\t\t\t\t\tcomponents={{ header: { cell: ResizableTitle } }}\n\t\t\t\t\tcolumns={customColumns}\n\t\t\t\t\tpagination={props.pagination !== false ? { ...props.pagination } : false}\n\t\t\t\t\tscroll={currentTableScroll}\n\t\t\t\t\tloading={props.loading}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t\trowSelection={props.rowSelection}\n\t\t\t\t/>\n\t\t\t</ConfigProvider>\n\t\t</Space>\n\t);\n};\n\nexport default TableBox;\n","import React, { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { Modal, Form, Spin, Input, FormInstance } from 'antd';\n\ninterface ModalFormProps {\n\tvisible: boolean;\n\tonCreate: (values: any, form: FormInstance<any>) => void;\n\tonCancel: () => void;\n\tloading?: boolean;\n\tchildren?: any;\n\ttitle?: string;\n\tformData?: Record<string, any>;\n\twidth?: number;\n\tonValuesChange?: () => {}\n}\n\nconst ModalForm = (props: ModalFormProps): JSX.Element => {\n\tconst [form] = Form.useForm();\n\tconst [, updateState] = useState<any>();\n\tconst forceUpdate = React.useCallback(() => updateState({}), []);\n\n\tuseEffect(() => {\n\t\tif (props.formData) {\n\t\t\tform.setFieldsValue(props.formData);\n\t\t}\n\t}, [props]);\n\n\tconst [formChangeRes, setFormChangeRes] = useState<{\n\t\tcurrentChange: Record<string, any>\n\t\tallValues: Record<string, any>\n\t}>({\n\t\tcurrentChange: {},\n\t\tallValues: {}\n\t})\n\n\t// const propsChildrenMemo = useMemo(() => props.children(form), [])\n\n\treturn (\n\t\t<Modal\n\t\t\t// confirmLoading={props.loading}\n\t\t\tdestroyOnClose={true}\n\t\t\tmaskClosable={false}\n\t\t\twidth={props.width || 680}\n\t\t\tvisible={props.visible}\n\t\t\ttitle={props.title}\n\t\t\tokText=\"确定\"\n\t\t\tcancelText=\"取消\"\n\t\t\tonCancel={() => {\n\t\t\t\tform.resetFields();\n\t\t\t\tprops.onCancel();\n\t\t\t}}\n\t\t\tonOk={() => {\n\t\t\t\tconsole.log(form.getFieldsValue())\n\t\t\t\tform.validateFields()\n\t\t\t\t\t.then((values) => {\n\t\t\t\t\t\tprops.onCreate(values, form);\n\t\t\t\t\t\t// form.resetFields();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((info) => {\n\t\t\t\t\t\t// console.log('Validate Failed:', info);\n\t\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t<Spin spinning={props.loading}>\n\t\t\t\t<Form onValuesChange={(value, allValues) => {\n\t\t\t\t\tsetFormChangeRes({\n\t\t\t\t\t\tcurrentChange: value,\n\t\t\t\t\t\tallValues\n\t\t\t\t\t})\n\t\t\t\t}} labelCol={{ span: 5 }} wrapperCol={{ span: 19 }} form={form} layout=\"horizontal\" name=\"form_in_modal\">\n\t\t\t\t\t{props.children && Object.prototype.toString.call(props.children) === '[object Function]'\n\t\t\t\t\t\t? props.children(form, formChangeRes)\n\t\t\t\t\t\t: props.children}\n\t\t\t\t</Form>\n\t\t\t</Spin>\n\t\t</Modal>\n\t);\n};\n\nexport default ModalForm;\n","import { AxiosResponse } from 'axios'\nimport axios, { AxiosResFormat } from '.'\nimport { IADUGTemplateInfo, IAppHeaderItem, IAppMenuItem, ICustomDialog } from './interface/kubeflowInterface'\n\nexport const getAppMenu = (): Promise<AxiosResponse<IAppMenuItem[]>> => {\n    return axios.get('/myapp/menu')\n}\n\nexport const getAppHeaderConfig = (): Promise<AxiosResponse<IAppHeaderItem[]>> => {\n    return axios.get('/myapp/navbar_right')\n}\n\nexport const userLogout = (): Promise<AxiosResponse<IAppMenuItem[]>> => {\n    return axios.get('/logout')\n}\n\nexport const getADUGTemplateApiInfo = (url?: string, id?: string): Promise<AxiosResponse<IADUGTemplateInfo>> => {\n    return axios.get(`${url || ''}_info`, {\n        params: {\n            id\n        }\n    })\n}\n\nexport const getCustomDialog = (url: string): Promise<AxiosResponse<ICustomDialog>> => {\n    return axios.get(`/myapp/feature/check?url=${url}`)\n}\n\nexport const getADUGTemplateList = (url?: string, params?: any): AxiosResFormat<any> => {\n    return axios.get(url || '', { params })\n}\n\nexport const getADUGTemplateDetail = (url: string): AxiosResFormat<any> => {\n    return axios.get(`${url}`, {\n        params: {\n            form_data: {\n                str_related: 1\n            }\n        }\n    })\n}\n\nexport const actionADUGTemplateAdd = (url?: string, params?: {}): AxiosResFormat<any> => {\n    return axios.post(url || '', params)\n}\n\nexport const actionADUGTemplateUpdate = (url?: string, params?: {}): AxiosResFormat<any> => {\n    return axios.put(url || '', params)\n}\n\nexport const actionADUGTemplateDelete = (url?: string, params?: {}): AxiosResFormat<any> => {\n    return axios.delete(url || '', { params })\n}\n\nexport const actionADUGTemplateSingle = (url?: string): AxiosResFormat<any> => {\n    return axios.get(url || '')\n}\n\nexport const actionADUGTemplateMuliple = (url?: string, params?: { ids: any[] }): AxiosResFormat<any> => {\n    return axios.post(url || '', params)\n}\n\nexport const actionADUGTemplateDownData = (url: string): AxiosResFormat<any> => {\n    return axios.get(url)\n}\n\nexport const actionADUGTemplateRetryInfo = (url: string, params: any): Promise<AxiosResponse<IADUGTemplateInfo>> => {\n    return axios.get(url, { params })\n}","import React, { ReactNode, useState, useEffect, ReactText } from 'react';\nimport { Form, Row, Col, Input, Select, Button } from 'antd';\nimport { DeleteOutlined, PlusOutlined, DownOutlined, UpOutlined } from '@ant-design/icons';\nimport './MixSearch.less';\nimport { LabeledValue } from 'antd/lib/select';\n\nconst { Option } = Select;\nexport interface IMixSearchParamItem {\n\tname: string\n\ttype: TMixSearchType\n\ttitle?: string\n\tdefalutValue?: any\n\tplaceHolder?: string\n\toption?: LabeledValue[]\n\tmultiple?: boolean\n\tindexKey?: number\n\tused?: boolean\n}\n\nexport type TMixSearchType = 'input' | 'select' | 'datePicker' | 'rangePicker'\n\ninterface IProps {\n\tparams?: IMixSearchParamItem[]\n\tvalues?: Array<{ key: ReactText | undefined, value: ReactText | undefined }>\n\tonChange: (values: Array<{ key: ReactText | undefined, value: ReactText | undefined }>) => void;\n}\n\nconst MixSearch = (props: IProps) => {\n\tconst [form] = Form.useForm();\n\tconst [collapsed, setCollapsed]: [boolean, any] = useState(false);\n\tconst [typeArr, setTypeArr]: [(string | undefined)[], any] = useState([]);\n\n\t// 序列化数据\n\tconst formatParamsData = (data?: IMixSearchParamItem[]) => {\n\t\treturn (data || []).map((item, indexKey) => ({ ...item, indexKey }))\n\t}\n\tconst [paramsData, setParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [currentParamsData, setCurrentParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [paramsDataMap, setParamsDataMap] = useState<Map<string, IMixSearchParamItem>>(new Map())\n\n\tuseEffect(() => {\n\t\tif (props.values) {\n\t\t\tconst group = props.values.length ? props.values : [{\n\t\t\t\tkey: undefined,\n\t\t\t\tvalue: undefined\n\t\t\t}]\n\t\t\tform.setFieldsValue({\n\t\t\t\tgroup\n\t\t\t})\n\n\t\t\tconst tarData = [...currentParamsData]\n\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\tfor (let j = 0; j < group.length; j++) {\n\t\t\t\t\tconst value = group[j];\n\t\t\t\t\tif (value !== undefined && group[j].key === tarData[i].name) {\n\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetCurrentParamsData(tarData)\n\t\t}\n\t}, [props.values])\n\n\tuseEffect(() => {\n\t\tif (props.params && props.params.length) {\n\t\t\tconst formatData = formatParamsData(props.params)\n\t\t\tsetParamsData(formatData)\n\t\t\tconst dataMap = paramsDataMap\n\t\t\tfor (let i = 0; i < formatData.length; i++) {\n\t\t\t\tconst param = formatData[i];\n\t\t\t\tdataMap.set(param.name, param)\n\t\t\t}\n\t\t\tsetParamsDataMap(dataMap)\n\t\t}\n\t}, [props.params])\n\n\t/**利用表单获取查询字段 */\n\tconst handleFinishForm = async (values: any): Promise<void> => {\n\t\tconsole.log(values);\n\t\tconst preVal = values['group'].filter(((item: any) => !!item.key))\n\t\tconst tarVal = preVal.map((item: any) => ({ key: item.key, value: item.value }))\n\t\tprops.onChange(tarVal);\n\t};\n\n\t/**展开收起 */\n\tconst handleCollapsed = (): void => {\n\t\tsetCollapsed(!collapsed);\n\t};\n\n\t/**选择筛选类型 */\n\tconst handleSelectType = (name: string, index: number): void => {\n\t\tform.resetFields([['group', index, 'value']]);\n\t\tlet arr = [...typeArr];\n\t\tarr[index] = name;\n\t\tsetTypeArr(arr);\n\t};\n\n\t/**根据选择的类型，渲染input或select */\n\tconst handleRenderValueEl = (index: number): ReactNode => {\n\t\tlet key = form.getFieldValue(['group', index, 'key']);\n\t\tif (key) {\n\t\t\tconst currentItem = paramsDataMap.get(key)\n\t\t\tif (currentItem?.type === 'input') {\n\t\t\t\treturn <Input\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdefaultValue={currentItem.defalutValue}\n\t\t\t\t\tplaceholder={currentItem.placeHolder}\n\t\t\t\t\tonPressEnter={() => handlePressEnter()} />\n\t\t\t} else if (currentItem?.type === 'select') {\n\t\t\t\tconst currentOptions = currentItem?.option || []\n\t\t\t\treturn <Select\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdropdownMatchSelectWidth={500}\n\t\t\t\t\tshowSearch\n\t\t\t\t\tmode={key === 'label' ? 'multiple' : undefined}\n\t\t\t\t\toptionFilterProp=\"label\"\n\t\t\t\t\toptions={currentOptions.map(item => ({ label: item.label, value: item.value }))}\n\t\t\t\t// onDropdownVisibleChange={(open) => handleDropdown(open, key)}\n\t\t\t\t/>\n\t\t\t}\n\t\t} else {\n\t\t\treturn <Input style={{ width: '65%' }} onPressEnter={() => handlePressEnter()} />;\n\t\t}\n\t};\n\n\t/**下拉获取对应的数据，并判断是否存在下拉数据，没有则请求，有则不请求 */\n\t// const handleDropdown = async (open: boolean, key: string): Promise<void> => {\n\t// \tif (open) {\n\t// \t\tif (selectionData[key]) {\n\t// \t\t\treturn;\n\t// \t\t}\n\t// \t\ttry {\n\t// \t\t\tlet res = await getSelections(key);\n\t// \t\t\tlet data = { ...selectionData };\n\t// \t\t\tdata[key] = res.data.data;\n\t// \t\t\tsetSelectionData(data);\n\t// \t\t} catch (error) { }\n\t// \t}\n\t// };\n\n\t/**输入框回车操作 */\n\tconst handlePressEnter = (): void => {\n\t\tform.validateFields();\n\t};\n\n\treturn (\n\t\t<Form\n\t\t\t// {...formConfig}\n\t\t\tclassName=\"cmdb-mixsearch bg-title\"\n\t\t\tform={form}\n\t\t\tonFinish={handleFinishForm}\n\t\t\tinitialValues={{\n\t\t\t\tgroup: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: undefined,\n\t\t\t\t\t\tvalue: undefined,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t>\n\t\t\t<Row className=\"cmdb-mixsearch-content\" gutter={16} style={{ marginLeft: 0, marginRight: 0, ...collapsed ? { height: 70 } : { height: 'auto' } }}>\n\t\t\t\t<Form.List name={`group`}>\n\t\t\t\t\t{(fields, { add, remove }) => {\n\t\t\t\t\t\treturn <>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfields.map((field, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`mixSearch_${field.key}_${index}`}>\n\t\t\t\t\t\t\t\t\t\t\t<Row align=\"middle\" gutter={8}>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <Col className=\"cmdb-mixsearch-name\">名称</Col> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input.Group compact>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'key']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: '请选择key' }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// initialValue={'testParams'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '35%' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"请选择\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// handleSelectType(value, index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst selectActionRemove = (value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).filter((item: any) => !!item).map((item: any) => item.key)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (!usedKey.includes(item.name)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectActionRemove(value)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{currentParamsData.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option style={{ display: item.used ? 'none' : 'inherit' }} key={`mixSearch_${item.name}_${index}`} value={item.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.title || item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshouldUpdate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'value']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: '请填写value' }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{handleRenderValueEl(index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Input.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-delete\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).map((item: any) => item ? item.key : undefined)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tremove(index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {index === fields.length - 1 && index < (paramsData.length - 1) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{paramsData.length !== fields.length && (\n\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add d-il\" onClick={() => {\n\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t}}\n\t\t\t\t</Form.List>\n\n\t\t\t\t<Col flex={1}>\n\t\t\t\t\t<Row justify=\"end\">\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t\t查询\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"cmdb-mixsearch-collapsed\">\n\t\t\t\t<Row onClick={() => handleCollapsed()} justify=\"center\" align=\"middle\">\n\t\t\t\t\t{collapsed ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Col>展开</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<DownOutlined />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Col>收起</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<UpOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t</Form>\n\t);\n};\n\nexport default MixSearch;\n","import React, { ReactText, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Input, DatePicker, TablePaginationConfig, Row, message, Space, Menu, Dropdown, Modal, Spin, Form, Tag, Popover, Tooltip, Select, FormInstance, Upload, UploadProps, Drawer, notification, Pagination } from 'antd';\nimport { Content } from 'antd/lib/layout/layout';\nimport TitleHeader from '../components/TitleHeader/TitleHeader';\nimport TableBox from '../components/TableBox/TableBox';\nimport moment from \"moment\";\nimport { CopyOutlined, DownOutlined, ExclamationCircleOutlined, ExportOutlined, PlusOutlined, QuestionCircleOutlined, RollbackOutlined, UploadOutlined } from '@ant-design/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getParam, getTableScroll } from '../util';\nimport ModalForm from '../components/ModalForm/ModalForm';\nimport cookies from 'js-cookie';\nimport { IADUGTemplateActionItem, IAppMenuItem } from '../api/interface/kubeflowInterface';\nimport { getADUGTemplateList, getADUGTemplateApiInfo, actionADUGTemplateDelete, getADUGTemplateDetail, actionADUGTemplateAdd, actionADUGTemplateUpdate, actionADUGTemplateSingle, actionADUGTemplateMuliple, getCustomDialog, actionADUGTemplateDownData, actionADUGTemplateRetryInfo } from '../api/kubeflowApi';\nimport { ColumnsType } from 'antd/lib/table';\nimport MixSearch, { IMixSearchParamItem } from '../components/MixSearch/MixSearch';\nimport DynamicForm, { calculateId, IDynamicFormConfigItem, IDynamicFormGroupConfigItem, ILinkageConfig, TDynamicFormType } from '../components/DynamicForm/DynamicForm';\nimport { columnConfig } from './columnConfig';\n\ninterface fatchDataParams {\n    pageConf: TablePaginationConfig\n    params: any[]\n    paramsMap: Record<string, any>\n    sorter?: ISorterParam\n}\n\ninterface ISorterParam {\n    order_column: string\n    order_direction: 'desc' | 'asc'\n}\n\nexport default function TaskListManager(props?: IAppMenuItem) {\n    const PAGE_SIZE = 20;\n    const navigate = useNavigate();\n    const location = useLocation()\n    const [dataList, setDataList] = useState<any[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [loadingAdd, setLoadingAdd] = useState(false)\n    const [visableAdd, setVisableAdd] = useState((getParam('isVisableAdd') === 'true') || false)\n    const [loadingUpdate, setLoadingUpdate] = useState(false)\n    const [visableUpdate, setVisableUpdate] = useState(false)\n    const [loadingDetail, setLoadingDetail] = useState(false)\n    const [visableDetail, setVisableDetail] = useState(false)\n    const [selectedRowKeys, setSelectedRowKeys] = useState<ReactText[]>([])\n    const [dateInfo, setDateInfo] = useState<{\n        startTime: string,\n        endTime: string\n    }>({\n        startTime: moment().subtract(1, 'd').startOf('day').format('YYYY-MM-DD HH:mm:ss'),\n        endTime: moment().subtract(1, 'd').endOf('day').format('YYYY-MM-DD HH:mm:ss')\n    })\n    const pageInfoInit: TablePaginationConfig = {\n        current: 1,\n        pageSize: PAGE_SIZE,\n        total: 0,\n        showSizeChanger: true,\n        showQuickJumper: true,\n        pageSizeOptions: [20, 50, 100, 500],\n        showTotal: (total) => `共${total}条`,\n    };\n    const [pageInfo, setPageInfo] = useState<TablePaginationConfig>(pageInfoInit);\n    const [currentColumns, setCurrentColumns] = useState<ColumnsType<any>>([])\n    // const customFilter: IMixSearchParamItem[] = [\n    //     { name: 'test1', type: 'input' },\n    //     { name: 'test2', type: 'select', option: [{ label: 'title1', value: 'value1' }, { label: 'title2', value: 'value2' }] },\n    //     { name: 'test3', type: 'input' },\n    //     { name: 'test4', type: 'select' },\n    // ]\n    const [filterParams, setFilterParams] = useState<IMixSearchParamItem[]>([])\n    const [filterValues, _setFilterValues] = useState<Array<{ key: ReactText | undefined, value: ReactText | undefined }>>([])\n    const filterValuesRef = useRef(filterValues);\n    const setFilterValues = (data: Array<{ key: ReactText | undefined, value: ReactText | undefined }>): void => {\n        filterValuesRef.current = data;\n        _setFilterValues(data);\n    };\n    const [dynamicFormConfigAdd, setDynamicFormConfigAdd] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormConfigUpdate, setDynamicFormConfigUpdate] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormGroupConfigAdd, setDynamicFormGroupConfigAdd] = useState<IDynamicFormGroupConfigItem[]>([])\n    const [dynamicFormGroupConfigUpdate, setDynamicFormGroupConfigUpdate] = useState<IDynamicFormGroupConfigItem[]>([])\n\n    let customFormData: Record<string, string> = {}\n    try {\n        customFormData = JSON.parse(getParam('formData') || \"{}\")\n    } catch (err) { }\n    const [dynamicFormDataAdd, setDynamicFormDataAdd] = useState(customFormData)\n    const [updateColumnsMap, setUpdateColumnsMap] = useState<Record<string, any>>({})\n    const [labelMap, _setLabelMap] = useState<Record<string, string>>({})\n    const labelMapRef = useRef(labelMap);\n    const setLabelMap = (data: Record<string, string>): void => {\n        labelMapRef.current = data;\n        _setLabelMap(data);\n    };\n    const [dataDetail, setDataDetail] = useState<Array<{ label: string, value: any, key: string }>>([])\n    const [tableWidth, setTableWidth] = useState(1000)\n    const [permissions, setPermissions] = useState<string[]>([])\n    // const [tips, setTips] = useState<Array<{ label: string, value: any }>>([])\n    const [filterParamsMap, setFilterParamsMap] = useState<Record<string, any>>({})\n    const [helpUrl, setHelpUrl] = useState<string | null>()\n\n    const [baseUrl, _setBaseUrl] = useState<string>()\n    const baseUrlRef = useRef(baseUrl);\n    const setBaseUrl = (data: string): void => {\n        baseUrlRef.current = data;\n        _setBaseUrl(data);\n    };\n    const [isImportData, setIsImportData] = useState(false)\n    const [isDownLoadData, setIsDownLoadData] = useState(false)\n    const [columnRelateFormat, setColumnRelateFormat] = useState<ILinkageConfig[]>([])\n    const [multipleAction, setMultipleAction] = useState<IADUGTemplateActionItem[]>([])\n    const [sorterParam, setSorterParam] = useState<{\n        order_column: string\n        order_direction: 'desc' | 'asc'\n    }>()\n    const [primaryKey, setPrimaryKey] = useState('')\n    const [labelTitle, setLabelTitle] = useState('')\n    const [list_ui_type, setList_ui_type] = useState<'card' | 'table'>()\n    const [list_ui_args, setList_ui_args] = useState<{\n        card_width: string\n        card_height: string\n    }>()\n    const [isTqAuth, setIsTqAuth] = useState(false)\n    const [listColumns, setListColumns] = useState<string[]>([])\n\n    const [scrollY, setScrollY] = useState(\"\")\n\n    const fetchDataParams = {\n        pageConf: pageInfoInit,\n        params: [],\n        paramsMap: filterParamsMap,\n        sorter: undefined\n    }\n\n    useEffect(() => {\n        setScrollY(getTableScroll())\n    }, [])\n\n    useEffect(() => {\n        if (props && props.disable) {\n            navigate('/404')\n        }\n    }, [])\n\n    // 表单字段处理\n    const createDyFormConfig = (data: Record<string, any>[], label_columns: Record<string, any>, description_columns: Record<string, any>): IDynamicFormConfigItem[] => {\n        return data.map((item, index) => {\n            let type = item['ui-type'] || 'input'\n            if (type === 'select2') {\n                type = 'select'\n            }\n            const label = item.label || label_columns[item.name]\n\n            // 校验规则\n            const rules = (item.validators || []).map((item: any) => {\n                if (type === 'select') {\n                    return item.type === 'DataRequired' ? { required: true, message: `请选择${label}` } : undefined\n                }\n\n                switch (item.type) {\n                    case 'DataRequired':\n                        return { required: true, message: `请输入${label}` }\n                    case 'Regexp':\n                        return { pattern: new RegExp(`${item.regex}`), message: `请按正确的规则输入` }\n                    case 'Length':\n                        return { min: item.min || 0, max: item.max, message: `请输入正确的长度` }\n                    default:\n                        return undefined\n                }\n            }).filter((item: any) => !!item)\n\n            const list = createDyFormConfig((item.info || []), label_columns, description_columns)\n\n            const res: IDynamicFormConfigItem = {\n                label,\n                type,\n                rules,\n                list,\n                name: item.name,\n                disable: item.disable,\n                description: item.description || description_columns[item.name] || undefined,\n                required: item.required,\n                defaultValue: item.default === '' ? undefined : item.default,\n                multiple: item['ui-type'] && item['ui-type'] === 'select2',\n                options: (item.values || []).map((item: any) => ({ label: item.value, value: item.id })),\n                data: { ...item }\n            }\n            return res\n        })\n    }\n\n    useEffect(() => {\n        const targetId = getParam('targetId')\n        const url = targetId ? `/dimension_remote_table_modelview/${targetId}/api/` : props?.url\n        setLoadingAdd(true)\n\n        getADUGTemplateApiInfo(url).then(res => {\n            const {\n                list_columns,\n                label_columns,\n                filters,\n                add_columns,\n                edit_columns,\n                permissions,\n                description_columns,\n                add_fieldsets,\n                edit_fieldsets,\n                help_url,\n                order_columns,\n                action,\n                route_base,\n                column_related,\n                primary_key,\n                label_title,\n                cols_width,\n                import_data,\n                download_data,\n                list_ui_type,\n                list_ui_args,\n            } = res.data\n            const actionwidth = 80 || [props?.related, permissions.includes('can_show'), permissions.includes('can_edit'), permissions.includes('can_delete')].filter(item => !!item).length * 60\n            const hasAction = props?.related || permissions.includes('can_show') || permissions.includes('can_edit') || permissions.includes('can_delete')\n            const cacheColumns = localStorage.getItem(`tablebox_${location.pathname}`)\n            const cacheColumnsWidthMap = (JSON.parse(cacheColumns || '[]')).reduce((pre: any, next: any) => ({ ...pre, [next.dataIndex]: next.width }), {});\n\n            const columnRelatedFormat: ILinkageConfig[] = Object.entries(column_related || {})\n                .reduce((pre: any[], [key, value]) => ([...pre, {\n                    dep: value.src_columns,\n                    effect: value.des_columns.join(''),\n                    effectOption: value.related.reduce((ePre: any, eNext) => ({ ...ePre, [calculateId(eNext.src_value)]: eNext.des_value.map(item => ({ label: item, value: item })) }), {})\n                }]), [])\n\n            // 表格字段处理\n            const listColumns = list_columns.map(column => {\n                return {\n                    title: label_columns[column] || column,\n                    dataIndex: column,\n                    key: column,\n                    sorter: order_columns.includes(column) ? (a: any, b: any) => a[column] - b[column] : undefined,\n                    render: (text: any, record: any) => {\n                        if (text === undefined || text === '') {\n                            return '-'\n                        }\n                        if (cols_width[column] && cols_width[column].type?.indexOf('ellip') !== -1) {\n                            return <Tooltip title={<span className=\"tips-content\" dangerouslySetInnerHTML={{ __html: text }}></span>} placement=\"topLeft\">\n                                <div className={cols_width[column].type} dangerouslySetInnerHTML={{ __html: text }}>\n                                </div>\n                            </Tooltip>\n                        }\n                        if (Object.prototype.toString.call(text) === '[object Object]') {\n                            const tarRes = Object.entries(text).reduce((pre: any, [label, value]) => [...pre, { label, value }], [])\n                            if (!tarRes.length) {\n                                return '-'\n                            }\n                            return <div style={{ overflow: 'auto', maxHeight: 100 }}>\n                                {\n                                    tarRes.map((item: any, index: number) => {\n                                        return <div key={`table_itemvalue_${index}`}>{label_columns[item.label] || item.label}:{item.value}</div>\n                                    })\n                                }\n                            </div>\n                        }\n                        return <div style={{ overflow: 'auto', maxHeight: 100 }} dangerouslySetInnerHTML={{ __html: text }}></div>\n                    },\n                    width: cacheColumnsWidthMap[column] || (cols_width[column] && cols_width[column].width) || 100\n                }\n            })\n\n            const actionList = Object.entries(action || {}).reduce((pre: any, [name, value]) => ([...pre, { ...value }]), [])\n            const multipleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.multiple)\n            const singleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.single)\n\n            const tableAction: any = {\n                title: '操作',\n                width: actionwidth,\n                dataIndex: 'handle',\n                key: 'handle',\n                align: 'right',\n                fixed: 'right',\n                render: (text: any, record: any) => {\n                    return (\n                        <Space size=\"middle\">\n                            {\n                                hasAction ? <Dropdown overlay={<Menu>\n                                    {\n                                        permissions.includes('can_show') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableDetail(true)\n                                            fetchDataDetail(record[primary_key])\n                                        }}>\n                                            详情\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_edit') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableUpdate(true)\n                                            getADUGTemplateApiInfo(route_base, record[primary_key]).then(res => {\n                                                const { edit_columns, label_columns, description_columns } = res.data\n                                                const formConfigUpdate: IDynamicFormConfigItem[] = createDyFormConfig(edit_columns, label_columns, description_columns)\n                                                const formGroupConfigUpdate: IDynamicFormGroupConfigItem[] = edit_fieldsets.map(group => {\n                                                    const currentData = group.fields.map(field => updateColumnsMap[field]).filter(item => !!item)\n                                                    return {\n                                                        group: group.group,\n                                                        expanded: group.expanded,\n                                                        config: createDyFormConfig(currentData, label_columns, description_columns)\n                                                    }\n                                                })\n\n                                                setDynamicFormConfigUpdate(formConfigUpdate)\n                                                setDynamicFormGroupConfigUpdate(formGroupConfigUpdate)\n\n                                                fetchDataDetail(record[primary_key])\n                                            }).catch(() => {\n                                                message.warn('用户没有修改权限')\n                                            })\n                                        }}>\n                                            修改\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_delete') ? <Menu.Item><div className=\"c-fail cp\" onClick={() => {\n                                            Modal.confirm({\n                                                title: '删除',\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: '确定删除?',\n                                                okText: '确认删除',\n                                                cancelText: '取消',\n                                                okButtonProps: { danger: true },\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateDelete(`${route_base}${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success('删除成功');\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error('删除失败');\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>\n                                            删除\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        props?.related?.map((item, index) => {\n                                            return <Menu.Item key={`moreAction_${index}`}>\n                                                <div className=\"link\" onClick={() => {\n                                                    navigate(`${location.pathname}/${item.name}?id=${record[primary_key]}`)\n                                                }}>\n                                                    {item.title}\n                                                </div>\n                                            </Menu.Item>\n                                        })\n                                    }\n                                    {\n                                        !!singleAction.length && singleAction.map((action, index) => {\n                                            return <Menu.Item key={`table_action_${index}`}><div className=\"link\" onClick={() => {\n                                                Modal.confirm({\n                                                    title: action.confirmation,\n                                                    icon: <ExclamationCircleOutlined />,\n                                                    content: '',\n                                                    okText: `确认${action.confirmation}`,\n                                                    cancelText: '取消',\n                                                    onOk() {\n                                                        return new Promise((resolve, reject) => {\n                                                            actionADUGTemplateSingle(`${route_base}action/${action.name}/${record[primary_key]}`)\n                                                                .then((res) => {\n                                                                    resolve(res);\n                                                                })\n                                                                .catch((err) => {\n                                                                    reject(err);\n                                                                });\n                                                        })\n                                                            .then((res: any) => {\n                                                                message.success('操作成功');\n\n                                                                if (res.data.result.link) {\n                                                                    window.open(res.data.result.link, 'bank')\n                                                                }\n                                                                fetchData({\n                                                                    ...fetchDataParams,\n                                                                    pageConf: pageInfo,\n                                                                    params: filterValuesRef.current,\n                                                                    paramsMap: filters\n                                                                });\n                                                            })\n                                                            .catch(() => {\n                                                                message.error('操作失败');\n                                                            });\n                                                    },\n                                                    onCancel() { },\n                                                });\n                                            }}>\n                                                {action.text}\n                                            </div></Menu.Item>\n                                        })\n                                    }\n                                </Menu>}>\n                                    <div className=\"link\">更多<DownOutlined /></div>\n                                </Dropdown> : null\n                            }\n                        </Space>\n                    );\n                },\n            }\n            const tarColumns: React.SetStateAction<ColumnsType<any>> = [...listColumns]\n            if (hasAction) {\n                tarColumns.push(tableAction)\n            }\n\n            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            // 联动字段处理\n            if (customFormData && Object.keys(customFormData).length) {\n                const reTryInfoQuene = (Object.keys(customFormData) || []).filter(key => customFormData[key] && addColumnsMap[key] && addColumnsMap[key].retry_info)\n                let reTryInfoFlag = reTryInfoQuene.length\n\n                const handleReTryInfo = (tar: string) => {\n                    reTryInfoFlag = reTryInfoFlag - 1;\n\n                    actionADUGTemplateRetryInfo(`${route_base}_info`, { exist_add_args: tar }).then(res => {\n                        const { add_columns, label_columns, description_columns, add_fieldsets } = res.data;\n                        const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n                        const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n                        const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                            const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                            return {\n                                group: group.group,\n                                expanded: group.expanded,\n                                config: createDyFormConfig(currentData, label_columns, description_columns)\n                            }\n                        })\n                        const formReset = add_columns.filter((item) => item.default !== '').map(column => ({ [column.name]: column.default })).reduce((pre, next) => ({ ...pre, ...next }), {})\n\n                        setDynamicFormDataAdd(formReset)\n                        setDynamicFormConfigAdd(formConfigAdd)\n                        setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n\n                        if (reTryInfoFlag) {\n                            const resTar = JSON.stringify(formReset)\n                            handleReTryInfo(resTar)\n                        }\n                    }).catch(err => {\n                        message.error('字段切换错误')\n                    }).finally(() => {\n                        setLoadingAdd(false)\n                    })\n                }\n\n                if (reTryInfoQuene.length) {\n                    const formRes = customFormData\n                    for (const key in formRes) {\n                        if (Object.prototype.hasOwnProperty.call(formRes, key)) {\n                            const value = formRes[key];\n                            if (value === undefined) {\n                                delete formRes[key]\n                            }\n                        }\n                    }\n                    const tar = JSON.stringify(formRes)\n\n                    handleReTryInfo(tar)\n                }\n            }\n\n            const updateColumnsMap = edit_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            edit_columns.forEach((item) => {\n                if (item['ui-type'] === 'list') {\n                    item.info.forEach((itemInfo: any) => {\n                        updateColumnsMap[itemInfo.name] = itemInfo\n                    })\n                }\n            })\n            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                return {\n                    group: group.group,\n                    expanded: group.expanded,\n                    config: createDyFormConfig(currentData, label_columns, description_columns)\n                }\n            })\n\n            const tarFilter: IMixSearchParamItem[] = Object.entries(filters)\n                .reduce((pre: any, [name, value]) => {\n                    return [...pre, {\n                        name,\n                        type: value['ui-type'] || 'input',\n                        title: label_columns[name],\n                        oprList: value.filter.map(item => item.operator),\n                        defalutValue: value.default === '' ? undefined : value.default,\n                        option: value.values ? value.values.map(item => ({ label: item.value, value: item.id })) : undefined\n                    }]\n                }, [])\n\n            let currentFilterValues = Object.entries(filters)\n                .reduce((pre: any, [key, value]) => {\n                    return [...pre, {\n                        key,\n                        value: value.default\n                    }]\n                }, []).filter((item: any) => item.value)\n\n            const localCacheFilter = JSON.parse(localStorage.getItem(`filter_${location.pathname}${location.search}`) || '[]')\n            let urlFilter = undefined\n            if (getParam('filter')) {\n                try {\n                    urlFilter = JSON.parse(getParam('filter') || '[]')\n                } catch (error) {\n                    message.error('filter解析异常')\n                }\n            }\n            const localFilter = urlFilter || localCacheFilter\n            if (localFilter && localFilter.length) {\n                currentFilterValues = localFilter\n            }\n\n            setListColumns(list_columns)\n            setList_ui_type(list_ui_type)\n            setList_ui_args(list_ui_args)\n            setIsDownLoadData(download_data)\n            setIsImportData(import_data)\n            setLabelTitle(label_title)\n            setPrimaryKey(primary_key)\n            setColumnRelateFormat(columnRelatedFormat)\n            setMultipleAction(multipleAction)\n            setBaseUrl(route_base)\n            setUpdateColumnsMap(updateColumnsMap)\n            setFilterParamsMap(filters)\n            setCurrentColumns(tarColumns)\n            setFilterParams(tarFilter)\n            setDynamicFormConfigAdd(formConfigAdd)\n            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n\n            setLabelMap(label_columns)\n            setPermissions(permissions)\n            const currentTableWidth = cacheColumns ? tarColumns.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 80 : tarColumns.length * 100 + 80 + actionwidth\n            setTableWidth(currentTableWidth)\n            setHelpUrl(help_url)\n            setFilterValues(currentFilterValues)\n            fetchData({\n                pageConf: pageInfoInit,\n                params: currentFilterValues,\n                paramsMap: filters,\n                sorter: undefined\n            });\n\n        }).catch(err => {\n            console.log(err);\n        }).finally(() => {\n            setLoading(false)\n            setLoadingAdd(false)\n        })\n    }, []);\n\n    const fetchData = ({\n        pageConf,\n        params,\n        paramsMap,\n        sorter\n    }: fatchDataParams = {\n            pageConf: pageInfoInit,\n            params: filterValues,\n            paramsMap: filterParamsMap,\n            sorter: undefined\n        }) => {\n        setLoading(true);\n        let form_data = undefined\n        const temlateId = getParam('id')\n\n        form_data = JSON.stringify({\n            str_related: 1,\n            \"filters\": [\n                temlateId ? {\n                    \"col\": props?.model_name,\n                    \"opr\": \"rel_o_m\",\n                    \"value\": +temlateId\n                } : undefined,\n                ...params.filter(param => param.value !== undefined).map((param: any) => {\n                    let opr = ''\n                    const oprList = ['rel_o_m', 'ct', 'eq']\n                    const sourceOprList: string[] = paramsMap[param.key].filter.map((item: any) => item.operator) || []\n\n                    for (let i = 0; i < oprList.length; i++) {\n                        const currentOpr = oprList[i];\n                        if (sourceOprList.includes(currentOpr)) {\n                            opr = currentOpr\n                            break\n                        }\n                    }\n                    // if (!isNaN(+param.value) && paramsMap[param.key] && !(paramsMap[param.key].type === 'Related' || paramsMap[param.key].type === 'QuerySelect')) {\n                    //     opr = 'eq'\n                    // } else {\n                    //     const oprList = ['rel_o_m', 'ct', 'eq']\n                    //     const sourceOprList: string[] = paramsMap[param.key].filter.map((item: any) => item.operator) || []\n\n                    //     for (let i = 0; i < oprList.length; i++) {\n                    //         const currentOpr = oprList[i];\n                    //         if (sourceOprList.includes(currentOpr)) {\n                    //             opr = currentOpr\n                    //             break\n                    //         }\n                    //     }\n                    // }\n\n                    return {\n                        \"col\": param.key,\n                        \"opr\": opr,\n                        \"value\": param.value\n                    }\n                })\n            ].filter(item => !!item),\n            page: (pageConf.current || 1) - 1,\n            page_size: pageConf.pageSize || 10,\n            ...sorter\n        })\n\n        getADUGTemplateList(baseUrlRef.current, {\n            form_data,\n        })\n            .then((res) => {\n                const { count, data } = res.data.result\n                setDataList(data);\n                setSelectedRowKeys([])\n                setPageInfo({ ...pageInfoInit, ...pageConf, total: count });\n                setSorterParam(sorter)\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            .finally(() => setLoading(false));\n    };\n\n    const fetchDataDetail = (id: string) => {\n        setLoadingDetail(true)\n        setDataDetail([])\n        getADUGTemplateDetail(`${baseUrlRef.current}${id}`)\n            .then(res => {\n                const data = res.data.result\n                const detail: any[] = []\n                const formatValue = (data: any) => {\n                    if (Object.prototype.toString.call(data) === '[object Object]') {\n                        return data.last_name\n                    }\n                    return data\n                }\n                Object.keys(data).forEach(key => {\n                    detail.push({\n                        label: labelMapRef.current[key] || key,\n                        value: formatValue(data[key]),\n                        key\n                    })\n                })\n                setDataDetail(detail)\n            })\n            .catch(err => { })\n            .finally(() => { setLoadingDetail(false) })\n    }\n\n    const handleMultiRecord = (action: IADUGTemplateActionItem) => {\n        if (selectedRowKeys.length) {\n            Modal.confirm({\n                title: action.confirmation,\n                icon: <ExclamationCircleOutlined />,\n                content: '',\n                okText: `确认${action.confirmation}`,\n                cancelText: '取消',\n                onOk() {\n                    return new Promise((resolve, reject) => {\n                        actionADUGTemplateMuliple(`${baseUrlRef.current}multi_action/${action.name}`, {\n                            ids: selectedRowKeys.map((item: any) => JSON.parse(item || '{}')[primaryKey])\n                        })\n                            .then((res) => {\n                                resolve('');\n                            })\n                            .catch((err) => {\n                                reject();\n                            });\n                    })\n                        .then((res) => {\n                            message.success('操作成功');\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(() => {\n                            message.error('操作失败');\n                        });\n                },\n                onCancel() { },\n            });\n        } else {\n            message.warn('请先选择')\n        }\n    }\n\n    const uploadConfig: UploadProps = {\n        name: 'csv_file',\n        maxCount: 1,\n        action: `${baseUrl}upload/`,\n        headers: {\n            authorization: 'authorization-text',\n        },\n        beforeUpload: file => {\n            const isCSV = file.name.indexOf('.csv') !== -1;\n            if (!isCSV) {\n                message.error(`${file.name} 并不是csv文件`);\n            }\n            return isCSV || Upload.LIST_IGNORE;\n        },\n        onChange(info) {\n            // if (info.file.status !== 'uploading') {\n            //     console.log(info.file, info.fileList);\n            // }\n            if (info.file.status === 'done') {\n                // message.success(`${info.file.name}，${info.file.response.message}`);\n                notification['success']({\n                    message: '导入成功',\n                    description: JSON.stringify(info.file.response),\n                });\n            } else if (info.file.status === 'error') {\n                // message.error(`${info.file.name} 数据导入失败`);\n                notification['error']({\n                    message: '导入失败',\n                    description: JSON.stringify(info.file.response),\n                });\n            }\n        },\n    };\n\n    return (\n        <div className=\"fade-in\">\n            {/* 添加 */}\n            <ModalForm\n                title={`添加${labelTitle}`}\n                width={1500}\n                formData={dynamicFormDataAdd}\n                loading={loadingAdd}\n                visible={visableAdd}\n                onCancel={() => { setVisableAdd(false) }}\n                onCreate={(values, form) => {\n                    setLoadingAdd(true)\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateAdd(baseUrlRef.current, values).then((res: any) => {\n                        message.success(`添加${labelTitle}成功`)\n                        form.resetFields()\n                        setVisableAdd(false)\n                        fetchData({\n                            ...fetchDataParams,\n                            pageConf: pageInfo,\n                            params: filterValues,\n                            sorter: sorterParam,\n                            paramsMap: filterParamsMap\n                        });\n                    }).catch(err => {\n                        message.error(`添加${labelTitle}失败`)\n                    }).finally(() => {\n                        setLoadingAdd(false)\n                    })\n                }}\n            >\n                {\n                    (form: FormInstance, formChangeRes: any) => <DynamicForm form={form} onRetryInfoChange={(value) => {\n                        setLoadingAdd(true)\n\n                        const formRes = form.getFieldsValue()\n                        for (const key in formRes) {\n                            if (Object.prototype.hasOwnProperty.call(formRes, key)) {\n                                const value = formRes[key];\n                                if (value === undefined) {\n                                    delete formRes[key]\n                                }\n                            }\n                        }\n                        const tar = JSON.stringify(formRes)\n                        form.resetFields()\n\n                        actionADUGTemplateRetryInfo(`${baseUrlRef.current}_info`, { exist_add_args: tar }).then(res => {\n                            const { add_columns, label_columns, description_columns, add_fieldsets } = res.data;\n                            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n                            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n                            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                                return {\n                                    group: group.group,\n                                    expanded: group.expanded,\n                                    config: createDyFormConfig(currentData, label_columns, description_columns)\n                                }\n                            })\n                            const formReset = add_columns.filter((item) => item.default !== '').map(column => ({ [column.name]: column.default })).reduce((pre, next) => ({ ...pre, ...next }), {})\n\n                            form.setFieldsValue(formReset)\n                            setDynamicFormConfigAdd(formConfigAdd)\n                            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n                        }).catch(err => {\n                            message.error('字段切换错误')\n                        }).finally(() => {\n                            setLoadingAdd(false)\n                        })\n\n                    }} formChangeRes={formChangeRes} linkageConfig={columnRelateFormat} config={dynamicFormConfigAdd} configGroup={dynamicFormGroupConfigAdd} />\n                }\n            </ModalForm>\n            {/* 修改 */}\n            <ModalForm\n                title={`修改${labelTitle}`}\n                width={1500}\n                formData={dataDetail.reduce((pre, next) => {\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select') {\n                        let value = next.value\n                        const options = (updateColumnsMap[next.key] || {}).values || []\n                        const tarIndex = options.map((item: any) => item.value).indexOf(next.value)\n                        if (~tarIndex) {\n                            value = options[tarIndex].id\n                        }\n                        return { ...pre, [next.key]: value }\n                    }\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select2') {\n                        return { ...pre, [next.key]: (next.value || '').split(',') }\n                    }\n\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'datePicker') {\n                        let value = next.value;\n                        value = moment(value)\n                        return { ...pre, [next.key]: value }\n                    }\n\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'list') {\n                        const value = (next.value || []).map((item: any) => {\n                            for (const listItemKey in item) {\n                                if (Object.prototype.hasOwnProperty.call(item, listItemKey)) {\n                                    const listItemValue = item[listItemKey];\n                                    if ((updateColumnsMap[listItemKey] || {})['ui-type'] === 'datePicker') {\n                                        item[listItemKey] = moment(listItemValue)\n                                    }\n                                }\n                            }\n                            return item\n                        })\n                        return { ...pre, [next.key]: value }\n                    }\n\n                    return { ...pre, [next.key]: next.value }\n                }, {})}\n                loading={loadingUpdate || loadingDetail}\n                visible={visableUpdate}\n                onCancel={() => { setVisableUpdate(false) }}\n                onCreate={(values) => {\n                    setLoadingUpdate(true)\n                    setDataDetail([])\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateUpdate(`${baseUrlRef.current}${values[primaryKey]}`, values)\n                        .then(res => {\n                            message.success(`更新${labelTitle}成功`)\n                            setVisableUpdate(false)\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(err => {\n                            message.error(`更新${labelTitle}失败`)\n                        })\n                        .finally(() => { setLoadingUpdate(false) })\n                }}\n            >\n                {\n                    (form: FormInstance) => <DynamicForm form={form} primaryKey={primaryKey} config={dynamicFormConfigUpdate} linkageConfig={columnRelateFormat} configGroup={dynamicFormGroupConfigUpdate} />\n                }\n            </ModalForm>\n            {/* 详情 */}\n            <Modal\n                title={`${labelTitle}详情`}\n                visible={visableDetail}\n                footer={null}\n                width={800}\n                destroyOnClose\n                onCancel={() => { setVisableDetail(false) }}>\n                <Spin spinning={loadingDetail}>\n                    <div className=\"pb32\" style={{ minHeight: 300 }}>\n                        {\n                            dataDetail.map((item, index) => {\n                                return <Row className=\"mb16\" key={`dataDetail_${index}`}>\n                                    <Col span={6}><div className=\"ta-r\"><strong>{item.label}：</strong></div></Col>\n                                    <Col span={18}><pre style={{ whiteSpace: 'break-spaces' }} dangerouslySetInnerHTML={{\n                                        __html: (() => {\n                                            let content = item.value\n                                            if (Object.prototype.toString.call(item.value) === '[object Object]' || Object.prototype.toString.call(item.value) === '[object Array]') {\n                                                try {\n                                                    content = JSON.stringify(item.value)\n                                                } catch (error) { }\n                                            }\n                                            return content\n                                        })()\n                                    }}></pre></Col>\n                                </Row>\n                            })\n                        }\n                    </div>\n                </Spin>\n            </Modal>\n            <TitleHeader title={<>\n                {\n                    (props?.isSubRoute || getParam('targetId')) ? <Button className=\"mr16\" onClick={() => {\n                        navigate('/data/metadata/metadata_dimension')\n                        window.location.reload()\n                    }}><RollbackOutlined />返回</Button> : null\n                }\n                <span>{labelTitle}</span>\n            </>} breadcrumbs={(props?.breadcrumbs || []).map((crumbs, idx) => {\n                return <span key={`templateTitle_${props?.name}_${idx}`} className=\"c-hint-b fs12\">/<span className=\"plr2\">{crumbs}</span></span>\n            })} >\n                {\n                    helpUrl ? <div className=\"link\"><span className=\"pr4\" onClick={() => {\n                        window.open(helpUrl, 'blank')\n                    }}>帮助链接</span><QuestionCircleOutlined /></div> : null\n                }\n            </TitleHeader>\n            <Content className=\"appmgmt-content bg-title\">\n                {/* <div>\n                    <img className=\"m32\" style={{ height: 42 }} src={require('../images/star2.svg').default} alt=\"\" />\n                </div> */}\n                {\n                    !!filterParams.length && <MixSearch values={filterValues} params={filterParams} onChange={(values) => {\n                        localStorage.setItem(`filter_${location.pathname}${location.search}`, JSON.stringify(values))\n                        setFilterValues(values)\n                        fetchData({\n                            ...fetchDataParams,\n                            pageConf: pageInfoInit,\n                            params: values,\n                            sorter: sorterParam,\n                            paramsMap: filterParamsMap\n                        });\n                    }} />\n                }\n                {/* {\n                    tips.length ? <div className=\"bg-module mlr24 p16\">\n                        {tips.map((item, index) => {\n                            return <div key={`ADUGTemplate_tips_${index}`}><span>{labelMapRef.current[item.label] || item.label}：</span><span>{item.value}</span></div>\n                        })}\n                    </div> : null\n                } */}\n                <div className=\"m16\">\n                    {\n                        list_ui_type !== 'card' ? <TableBox\n                            cancelExportData={true}\n                            tableKey={`tablebox_${location.pathname}`}\n                            titleNode={<Col className=\"tablebox-title\">{labelTitle}列表</Col>}\n                            buttonNode={<div className=\"d-f ac\">\n\n                                {\n                                    permissions.includes('can_add') ? <Button className=\"mr16\" type=\"primary\" onClick={() => setVisableAdd(true)}>添加{labelTitle}<PlusOutlined /></Button> : null\n                                }\n                                <div>\n                                    <Dropdown overlay={<Menu>\n                                        {\n                                            multipleAction.map((action, index) => {\n                                                return <Menu.Item key={`table_muliple_${index}`}>\n                                                    <span className=\"link\" onClick={() => handleMultiRecord(action)}>\n                                                        {`批量${action.text}`}\n                                                    </span>\n                                                </Menu.Item>\n                                            })\n                                        }\n\n                                    </Menu>}>\n                                        <Button>批量操作 <DownOutlined /></Button>\n                                    </Dropdown>\n                                </div>\n                                {\n                                    isImportData ? <div className=\"d-f ml16\">\n                                        <Tooltip color=\"#fff\" title={<span className=\"tips-content-b\">注意：csv逗号分隔，第一行为列的英文名 <span className=\"link\" onClick={() => {\n                                            window.open(`${window.location.origin}${baseUrlRef.current}download_template`)\n                                        }}>下载导入模板</span></span>} placement=\"topLeft\">\n                                            <Upload {...uploadConfig}>\n                                                <Button className=\"\" icon={<UploadOutlined />}>批量导入数据</Button>\n                                            </Upload>\n                                        </Tooltip>\n                                    </div> : null\n                                }\n                                {\n                                    isDownLoadData ? <Button className=\"ml16\" onClick={() => {\n                                        Modal.confirm({\n                                            title: '导出数据',\n                                            icon: <ExclamationCircleOutlined />,\n                                            content: '',\n                                            okText: '确认导出数据',\n                                            cancelText: '取消',\n                                            onOk() {\n                                                window.open(`${window.location.origin}${baseUrlRef.current}download`)\n                                                message.success('导出成功');\n                                            },\n                                            onCancel() { },\n                                        });\n                                    }}>批量导出  <ExportOutlined /></Button> : null\n                                }\n\n                            </div>}\n                            rowKey={(record: any) => {\n                                return JSON.stringify(record)\n                            }}\n                            columns={currentColumns}\n                            loading={loading}\n                            pagination={pageInfo}\n                            dataSource={dataList}\n                            onChange={(pageInfo: any, filters, sorter: any) => {\n                                const tarSorter = sorter.order ? {\n                                    order_column: sorter.columnKey,\n                                    order_direction: sorter.order === \"ascend\" ? 'asc' : 'desc'\n                                } as ISorterParam : undefined\n\n                                fetchData({\n                                    ...fetchDataParams,\n                                    pageConf: pageInfo,\n                                    params: filterValues,\n                                    paramsMap: filterParamsMap,\n                                    sorter: tarSorter\n                                });\n                                // setPageInfo(pageInfo)\n                            }}\n                            rowSelection={{\n                                type: 'checkbox',\n                                fixed: 'left',\n                                columnWidth: 80,\n                                selectedRowKeys,\n                                onChange: (selectedRowKeys) => {\n                                    setSelectedRowKeys(selectedRowKeys)\n                                }\n                            }}\n                            scroll={{ x: tableWidth, y: scrollY }}\n                        /> : <div className=\"bg-w p16\">\n                                <div className=\"d-f fw\">\n                                    {\n                                        dataList.map((row, rowIndex) => {\n                                            return <div style={{ overflowY: 'auto', width: list_ui_args?.card_width, height: list_ui_args?.card_height }} key={`card${rowIndex}`} className=\"card-row mr16 mb16\" >\n                                                {\n                                                    Object.keys(row).map((key, itemIndex) => {\n                                                        if (listColumns.includes(key)) {\n                                                            return <div style={{ wordBreak: 'break-all' }} key={`row${rowIndex}${itemIndex}`} dangerouslySetInnerHTML={{ __html: row[key] }}></div>\n                                                        }\n                                                        return null\n                                                    })\n                                                }\n                                            </div>\n                                        })\n                                    }\n                                </div>\n                                <div className=\"ta-r\">\n                                    <Pagination {...pageInfo} onChange={(page, pageSize) => {\n                                        fetchData({\n                                            ...fetchDataParams,\n                                            pageConf: {\n                                                ...pageInfo,\n                                                current: page,\n                                                pageSize\n                                            },\n                                            params: filterValues,\n                                            paramsMap: filterParamsMap,\n                                        });\n                                    }} />\n                                </div>\n                            </div>\n                    }\n\n                </div>\n            </Content>\n        </div >\n    );\n}\n\n"],"names":["Title","Typography","props","styles","position","top","className","justify","align","style","noBorderBottom","borderBottom","level","marginBottom","title","breadcrumbs","children","CopyToClipboard","require","customizeRenderEmpty","height","flexDirection","src","emptyImg","width","alt","ResizableTitle","onResize","restProps","Resizable","handle","onClick","e","stopPropagation","draggableOpts","enableUserSelectHack","userSelect","useState","exportDataVisible","setExportDataVisible","header","data","dataFormat","setDataFormat","filterValue","setFilterValue","columns","cols","setCols","handleResize","index","_","size","temp","tableWidth","reduce","pre","next","localStorage","setItem","tableKey","JSON","stringify","setCurrentTableScroll","currentTableScroll","x","customColumns","map","col","onHeaderCell","column","scroll","useEffect","dataSource","filter","item","indexOf","dataIndex","handdleFilterHeader","dataColumns","sheetHeader","tarData","forEach","dataRow","row","colName","res","push","handleExportJira","str","length","join","rowKey","Object","values","handleExportText","direction","maskClosable","centered","bodyStyle","maxHeight","overflow","visible","onCancel","footer","options","label","value","defaultValue","onChange","right","bottom","type","tab","text","onCopy","message","cursor","minHeight","option","datas","sheetData","sheetName","ExportJsonExcel","saveExcel","titleNode","buttonNode","cancelExportData","marginLeft","renderEmpty","components","cell","pagination","loading","rowSelection","Form","form","updateState","React","formData","setFieldsValue","currentChange","allValues","formChangeRes","setFormChangeRes","destroyOnClose","okText","cancelText","resetFields","onOk","console","log","getFieldsValue","validateFields","then","onCreate","catch","info","spinning","onValuesChange","labelCol","span","wrapperCol","layout","name","prototype","toString","call","getADUGTemplateApiInfo","url","id","axios","params","getADUGTemplateList","actionADUGTemplateRetryInfo","Option","Select","collapsed","setCollapsed","formatParamsData","indexKey","paramsData","setParamsData","currentParamsData","setCurrentParamsData","Map","paramsDataMap","setParamsDataMap","group","key","undefined","i","j","used","formatData","dataMap","param","set","handleFinishForm","preVal","tarVal","handleRenderValueEl","getFieldValue","onPressEnter","handlePressEnter","currentItem","get","defalutValue","placeholder","placeHolder","currentOptions","dropdownMatchSelectWidth","showSearch","mode","optionFilterProp","onFinish","initialValues","gutter","marginRight","fields","add","remove","field","compact","noStyle","rules","required","usedKey","includes","selectActionRemove","display","shouldUpdate","DeleteOutlined","PlusOutlined","flex","htmlType","DownOutlined","UpOutlined","TaskListManager","navigate","useNavigate","location","useLocation","dataList","setDataList","setLoading","loadingAdd","setLoadingAdd","getParam","visableAdd","setVisableAdd","loadingUpdate","setLoadingUpdate","visableUpdate","setVisableUpdate","loadingDetail","setLoadingDetail","visableDetail","setVisableDetail","selectedRowKeys","setSelectedRowKeys","startTime","moment","subtract","startOf","format","endTime","endOf","pageInfoInit","current","pageSize","total","showSizeChanger","showQuickJumper","pageSizeOptions","showTotal","pageInfo","setPageInfo","currentColumns","setCurrentColumns","filterParams","setFilterParams","filterValues","_setFilterValues","filterValuesRef","useRef","setFilterValues","dynamicFormConfigAdd","setDynamicFormConfigAdd","dynamicFormConfigUpdate","setDynamicFormConfigUpdate","dynamicFormGroupConfigAdd","setDynamicFormGroupConfigAdd","dynamicFormGroupConfigUpdate","setDynamicFormGroupConfigUpdate","customFormData","parse","err","dynamicFormDataAdd","setDynamicFormDataAdd","updateColumnsMap","setUpdateColumnsMap","labelMap","_setLabelMap","labelMapRef","dataDetail","setDataDetail","setTableWidth","permissions","setPermissions","filterParamsMap","setFilterParamsMap","helpUrl","setHelpUrl","baseUrl","_setBaseUrl","baseUrlRef","isImportData","setIsImportData","isDownLoadData","setIsDownLoadData","columnRelateFormat","setColumnRelateFormat","multipleAction","setMultipleAction","sorterParam","setSorterParam","primaryKey","setPrimaryKey","labelTitle","setLabelTitle","list_ui_type","setList_ui_type","list_ui_args","setList_ui_args","listColumns","setListColumns","scrollY","setScrollY","fetchDataParams","pageConf","paramsMap","sorter","getTableScroll","disable","createDyFormConfig","label_columns","description_columns","validators","pattern","RegExp","regex","min","max","list","description","default","multiple","targetId","list_columns","filters","add_columns","edit_columns","add_fieldsets","edit_fieldsets","help_url","order_columns","action","route_base","column_related","primary_key","label_title","cols_width","import_data","download_data","hasAction","related","cacheColumns","getItem","pathname","cacheColumnsWidthMap","columnRelatedFormat","entries","dep","src_columns","effect","des_columns","effectOption","ePre","eNext","calculateId","src_value","des_value","a","b","render","record","dangerouslySetInnerHTML","__html","placement","tarRes","actionList","singleAction","single","tableAction","fixed","overlay","fetchDataDetail","formConfigUpdate","formGroupConfigUpdate","currentData","expanded","config","Modal","icon","ExclamationCircleOutlined","content","okButtonProps","danger","Promise","resolve","reject","actionADUGTemplateDelete","fetchData","confirmation","actionADUGTemplateSingle","result","link","window","open","tarColumns","addColumnsMap","keys","reTryInfoQuene","retry_info","reTryInfoFlag","formRes","hasOwnProperty","handleReTryInfo","tar","exist_add_args","formConfigAdd","formGroupConfigAdd","formReset","resTar","finally","itemInfo","tarFilter","oprList","operator","currentFilterValues","localCacheFilter","search","urlFilter","error","localFilter","setLabelMap","currentTableWidth","form_data","temlateId","str_related","model_name","opr","sourceOprList","currentOpr","page","page_size","count","detail","formatValue","last_name","handleMultiRecord","ids","uploadConfig","maxCount","headers","authorization","beforeUpload","file","isCSV","Upload","status","notification","response","Array","isArray","DynamicForm","onRetryInfoChange","linkageConfig","configGroup","tarIndex","split","listItemKey","listItemValue","whiteSpace","isSubRoute","reload","RollbackOutlined","crumbs","idx","QuestionCircleOutlined","color","origin","UploadOutlined","ExportOutlined","tarSorter","order","order_column","columnKey","order_direction","columnWidth","y","rowIndex","overflowY","card_width","card_height","itemIndex","wordBreak"],"sourceRoot":""}