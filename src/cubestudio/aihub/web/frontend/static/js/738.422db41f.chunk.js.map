{"version":3,"file":"static/js/738.422db41f.chunk.js","mappings":"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","sources":["components/InputSearch/InputSearch.tsx","components/FileUploadPlus/FileUploadPlus.tsx","components/ImageUploadPlus/ImageUploadPlus.tsx","components/CheckoutGroupPlus/CheckoutGroupPlus.tsx","components/DynamicForm/DynamicForm.tsx"],"sourcesContent":["import { SearchOutlined } from '@ant-design/icons';\nimport { Input } from 'antd';\nimport React, { useState, ChangeEvent, useEffect } from 'react';\nimport './InputSearch.less';\n\ninterface IProps {\n    labelName?: string,\n    width?: string,\n    placeholder?: string,\n    maxLength?: number,\n    maxHeight?: number,\n    // 是否开启前端搜索匹配\n    isOpenSearchMatch?: boolean,\n    loading?: boolean | JSX.Element,\n    // 配置提示列表\n    options?: string[],\n    // 当配置value时，即为可控组件\n    value?: string,\n    disabled?: boolean\n    // 按回车时回调\n    onSearch?: (value: string) => void,\n    // 输入字符、按下回车时回调\n    onChange?: (value: string) => void,\n    // 点击option中的item\n    onClick?: (value: string) => void,\n    // 滚动条到底时触发\n    onScrollButtom?: () => void\n}\n\nexport default function InputSearch(props: IProps): JSX.Element {\n    const id = Math.random().toString(36).substring(2);\n    let inputRef: any;\n\n    const [dataCache, setDataCache] = useState<string[]>(props.options || []);\n    const [value, setValue] = useState(props.value || '');\n\n    useEffect(() => {\n        const dataFilter = props.isOpenSearchMatch ? (props.options || []).filter(item => {\n            return item.indexOf(value) !== -1;\n        }) : (props.options || []);\n        setDataCache(dataFilter);\n    }, [props.options]);\n\n    useEffect(() => {\n        setValue(props.value || '');\n        // props.onChange && props.onChange(props.value);\n    }, [props.value]);\n\n    const handleChange = (value: string): void => {\n        setValue(value);\n        props.onChange && props.onChange(value);\n    };\n\n    const handleClick = (value: string): void => {\n        handleChange(value);\n        props.onClick && props.onClick(value);\n    };\n\n    const handleEnterKey = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n        // 回车\n        if (e.nativeEvent.keyCode === 13) {\n            inputRef.blur && inputRef.blur();\n            props.onSearch && props.onSearch(e.currentTarget.value);\n        }\n    };\n\n    const highlightKeyWord = (item: string): JSX.Element => {\n        const keyWord = value;\n        const index = item.indexOf(value);\n        if (index === -1) {\n            return <span>{item}</span>;\n        }\n        const preStr = item.substring(0, index);\n        const nextStr = item.substring(index + value.length);\n        return <span>{preStr}<span className=\"highlight\">{keyWord}</span>{nextStr}</span>;\n    };\n\n    const debounce = (fun: any, time = 500): any => {\n        let timer: ReturnType<typeof setTimeout>;\n        return function (...args: any): void {\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                fun && fun.apply(null, [...args]);\n            }, time);\n        };\n    };\n\n    const debounceScroll = debounce(props.onScrollButtom);\n\n    const handleScroll = (e: React.UIEvent<HTMLElement>): void => {\n        e.stopPropagation();\n        // console.log({\n        //     event: e,\n        //     target: e.target, // Note 1* scrollTop is undefined on e.target\n        //     currentTarget: e.currentTarget,\n        //     scrollTop: e.currentTarget.scrollTop,\n        //     scrollHeight: e.currentTarget.scrollHeight,\n        //     clientHeight: e.currentTarget.clientHeight\n        // });\n        const { currentTarget } = e;\n        const { scrollTop, clientHeight, scrollHeight } = currentTarget;\n        const difference = scrollHeight - clientHeight - scrollTop;\n        if (difference < 20) {\n            props.onScrollButtom && debounceScroll();\n        }\n    };\n\n    return (\n        <div className=\"select-down-modern\">\n            {\n                props.labelName ? <label htmlFor={id} className=\"pb4 mb0 fs12 d-b\">{props.labelName}</label> : null\n            }\n            <div className=\"p-r d-f ac\" style={{ width: props.width || 100 + '%' }}>\n                <Input\n                    style={{ width: '100%' }}\n                    disabled={props.disabled}\n                    id={id}\n                    placeholder={props.placeholder || ''}\n                    maxLength={props.maxLength || 200}\n                    onChange={(e: ChangeEvent<HTMLInputElement>): void => handleChange(e.target.value)}\n                    onKeyPress={handleEnterKey}\n                    value={value}\n                    ref={element => inputRef = element}\n                />\n                <SearchOutlined className=\"p-a r0 mr8\" />\n            </div>\n\n            {\n                // 输入提示\n                dataCache.length ? <ul className=\"select-option shadow\" onScroll={handleScroll} style={{ 'maxHeight': `${props.maxHeight}px` }}>\n                    {\n                        props.loading ? <div className=\"p-s z9 ta-r\" style={{ right: `${0}px`, top: `${0}px` }}>\n                            <div className=\"d-il p-a\" style={{ right: `${8}px`, top: `${0}px` }}></div>\n                        </div> : null\n                    }\n                    {\n                        dataCache.map((item, index) => {\n                            return <li className=\"ellip1\" onMouseDown={(): void => handleClick(item)} key={index}>{highlightKeyWord(item)}</li>;\n                        })\n                    }\n                </ul> : null\n            }\n        </div>\n    );\n}","import { CloseOutlined, DeleteColumnOutlined, DeleteFilled, DeleteOutlined, InboxOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { message } from 'antd';\nimport Upload, { RcFile, UploadChangeParam } from 'antd/lib/upload';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport React, { useState } from 'react'\nimport './FileUploadPlus.less';\n\ninterface Iprops {\n    type?: TFileType\n    onChange?: (value: UploadFile[]) => void\n    value?: string[]\n    maxCount?: number\n    maxSize?: number\n}\n\ntype TFileType = 'file' | 'video' | 'audio'\n\nexport default function FileUploadPlus(props: Iprops) {\n    const [visableChangePhone, setVisableChangePhone] = useState(false);\n    const [fileLoading, setFileLoading] = useState(false);\n    const [imgUrl, setImgUrl] = useState('');\n    const [imageList, setImageList] = useState<string[]>([])\n    const [loading, setLoading] = useState(true);\n    const [fileList, setFileList] = useState<UploadFile[]>([])\n\n    function getBase64(img: any, callback: any) {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    function beforeUpload(file: RcFile) {\n        const maxCount = props.maxCount || 1\n        if (fileList.length >= maxCount) {\n            message.error('超出文件数量限制');\n            return false\n        }\n        const isFormatOk = true || file.type === 'image/jpeg';\n        if (!isFormatOk) {\n            message.error('文件格式错误');\n        }\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            message.error('文件大小应小于 2MB');\n        }\n        return isFormatOk && isLt2M;\n    }\n\n    const handleChange = (info: UploadChangeParam) => {\n        console.log(info);\n\n        if (info.file.status === 'uploading') {\n            setFileLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            setFileLoading(false);\n            setFileList(info.fileList)\n            props.onChange && props.onChange(info.fileList)\n        }\n        if (info.file.status === \"removed\") {\n            setFileList(info.fileList)\n            props.onChange && props.onChange(info.fileList)\n            return;\n        }\n    };\n\n    //建立一个可存取到该file的url\n    function getObjectURL(file: any) {\n        var url = null;\n        if ((window as any).createObjectURL != undefined) { // basic\n            url = (window as any).createObjectURL(file);\n        } else if (window.URL != undefined) { // mozilla(firefox)\n            url = window.URL.createObjectURL(file);\n        } else if (window.webkitURL != undefined) { // webkit or chrome\n            url = window.webkitURL.createObjectURL(file);\n        }\n        return url;\n    }\n\n    const createMediaPreview = (file: UploadFile<any>, fileIndex: number, type: TFileType) => {\n        const url = getObjectURL(file)\n        const key = Math.random().toString(36).substring(2);\n        if (type === 'video') {\n            return <div className=\"p-r\" key={key}>\n                <span\n                    onClick={() => {\n                        const currentFileList = [...fileList]\n                        currentFileList.splice(fileIndex, 1)\n                        setFileList(currentFileList)\n                    }}\n                    className=\"d-il p-a plr8 ptb2 bg-fail\"\n                    style={{ top: 0, right: 0, borderBottomLeftRadius: 6, zIndex: 9 }}>\n                    <DeleteOutlined style={{ color: '#fff' }} />\n                </span>\n                <video className=\"w100 mb8\" src={url} controls></video>\n            </div>\n        } else if (type === 'audio') {\n            return <div className=\"d-f ac mb8\" key={key}>\n                <audio className=\"w100 flex1\" src={url} controls></audio>\n                <span\n                    onClick={() => {\n                        const currentFileList = [...fileList]\n                        currentFileList.splice(fileIndex, 1)\n                        setFileList(currentFileList)\n                    }}\n                    className=\"d-il plr8 ptb2 bg-fail\"\n                    style={{ borderRadius: 6 }}>\n                    <DeleteOutlined style={{ color: '#fff' }} />\n                </span>\n            </div>\n        }\n        return file\n    }\n\n    return (\n        <>\n            <div>\n                {\n                    fileList.map((file, fileIndex) => {\n                        return createMediaPreview(file, fileIndex, 'video')\n                    })\n                }\n            </div>\n            <Upload.Dragger\n                // name=\"file\"\n                fileList={fileList}\n                showUploadList={false}\n                customRequest={(options) => {\n                    console.log(options.file);\n                    const tarList = [...fileList, options.file as RcFile]\n                    setFileList(tarList)\n                    props.onChange && props.onChange(tarList)\n                    // getBase64(options.file, (imageUrl: string) => {\n                    //     // setImgUrl(imageUrl);\n                    //     const tarList = [...imageList, imageUrl]\n                    //     setImageList(tarList)\n                    //     setFileLoading(false);\n                    //     props.onChange && props.onChange(tarList)\n                    // });\n                }}\n                beforeUpload={beforeUpload}\n                onChange={handleChange}\n            >\n                <p className=\"ant-upload-drag-icon\">\n                    <InboxOutlined />\n                </p>\n                <p className=\"ant-upload-text\">点击或拖拽文件上传</p>\n            </Upload.Dragger>\n        </>\n    )\n}\n","import { CloseOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { message } from 'antd';\nimport Upload, { RcFile, UploadChangeParam } from 'antd/lib/upload';\nimport React, { useState } from 'react'\nimport './ImageUploadPlus.less';\n\ninterface Iprops {\n    maxCount?: number\n    value?: string[]\n    onChange?: (value: string[]) => void\n}\n\nexport default function ImageUploadPlus(props: Iprops) {\n    const [visableChangePhone, setVisableChangePhone] = useState(false);\n    const [fileLoading, setFileLoading] = useState(false);\n    const [imgUrl, setImgUrl] = useState('');\n    const [imageList, setImageList] = useState<string[]>([])\n    const [loading, setLoading] = useState(true);\n\n    function getBase64(img: any, callback: any) {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    function beforeUpload(file: RcFile) {\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n        if (!isJpgOrPng) {\n            message.error('仅支持 JPG/PNG 格式图片');\n        }\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            message.error('图片大小应小于 2MB');\n        }\n        return isJpgOrPng && isLt2M;\n    }\n\n    const handleChange = (info: UploadChangeParam) => {\n        console.log(info);\n        if (info.file.status === 'uploading') {\n            setFileLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            setFileLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"d-f fw\">\n            {\n                imageList.map((imageUrl, imageIndex) => {\n                    const key = Math.random().toString(36).substring(2);\n                    return <div className=\"image-card s0 mr16 mb16\" key={key}>\n                        <div className=\"image-close\" onClick={() => {\n                            const orginList = [...imageList]\n                            orginList.splice(imageIndex, 1)\n                            setImageList(orginList)\n                            props.onChange && props.onChange(orginList)\n                        }}>\n                            <CloseOutlined style={{ color: '#fff' }} />\n                        </div>\n                        <img\n                            src={imageUrl}\n                            alt=\"file\"\n                            style={{ width: '100%' }}\n                        />\n                    </div>\n                })\n            }\n            {\n                imageList.length < (props.maxCount || 1) ? <Upload\n                    name=\"file\"\n                    listType=\"picture-card\"\n                    className=\"file-uploader\"\n                    showUploadList={false}\n                    // action={ }\n                    method=\"POST\"\n                    customRequest={(options) => {\n                        console.log(options.file);\n                        getBase64(options.file, (imageUrl: string) => {\n                            // setImgUrl(imageUrl);\n                            const tarList = [...imageList, imageUrl]\n                            setImageList(tarList)\n                            setFileLoading(false);\n                            props.onChange && props.onChange(tarList)\n                        });\n                    }}\n                    beforeUpload={beforeUpload}\n                    onChange={handleChange}\n                >\n                    <div>\n                        {fileLoading ? (\n                            <LoadingOutlined />\n                        ) : (\n                                <PlusOutlined />\n                            )}\n                        <div style={{ marginTop: 8 }}>上传图片</div>\n                    </div>\n                </Upload> : null\n            }\n        </div>\n    )\n}\n","import { LabeledValue } from 'antd/lib/select';\r\nimport React, { ChangeEvent, ReactNode } from 'react';\r\nimport './CheckoutGroupPlus.less'\r\n\r\ndeclare module 'react' {\r\n    interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\r\n        // extends React's HTMLAttributes\r\n        trigger?: string;\r\n    }\r\n}\r\n\r\ninterface CheckboxProps {\r\n    name?: string,\r\n    label?: string,\r\n    className?: string,\r\n    checked?: boolean | undefined,\r\n    defaultChecked?: boolean,\r\n    disabled?: boolean,\r\n    value?: number | string,\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\ninterface CheckboxGroupProps {\r\n    values?: string[],\r\n    defaultValue?: string[],\r\n    disabled?: boolean,\r\n    // option: LabeledValue[],\r\n    option: ICheckboxOptions[],\r\n    className?: string,\r\n    children?: JSX.Element,\r\n    onChange?: (values: Array<string | number>) => void\r\n}\r\n\r\nexport interface ICheckboxOptions {\r\n    label: ReactNode,\r\n    value: string | number,\r\n    display?: boolean,\r\n    disabled?: boolean,\r\n}\r\n\r\nexport default function Checkbox(props: CheckboxProps): JSX.Element {\r\n    const id = Math.random().toString(36).substring(2);\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        props.onChange && props.onChange(e);\r\n    };\r\n\r\n    return (\r\n        <div className={['checkbox-box-normalize mr16 d-il', props.className].join(' ')}>\r\n            {\r\n                props.checked === undefined ? <input\r\n                    id={id}\r\n                    trigger='core'\r\n                    type=\"checkbox\"\r\n                    disabled={props.disabled}\r\n                    name={props.name || ''}\r\n                    value={props.value}\r\n                    defaultChecked={props.defaultChecked || false}\r\n                    onChange={handleChange}\r\n                /> : <input\r\n                        id={id}\r\n                        trigger='core'\r\n                        type=\"checkbox\"\r\n                        disabled={props.disabled}\r\n                        name={props.name || ''}\r\n                        value={props.value}\r\n                        checked={props.checked}\r\n                        onChange={handleChange}\r\n                    />\r\n            }\r\n            <span className=\"checkbox-hook ta-c\">\r\n                <span className=\"checkbox-hook-in fs12 op0\">✓</span>\r\n            </span>\r\n            <label htmlFor={id} className=\"p-r z10 pl8\">{props.label || ''}</label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function CheckboxFontIn(props: CheckboxProps): JSX.Element {\r\n    const id = Math.random().toString(36).substring(2);\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        props.onChange && props.onChange(e);\r\n        console.log(e);\r\n    };\r\n\r\n    return (\r\n        <div className={['checkbox-box-fontstyle d-il mr16 mb8', props.className].join(' ')}>\r\n            {\r\n                props.checked === undefined ? <input\r\n                    id={id}\r\n                    trigger='core'\r\n                    type=\"checkbox\"\r\n                    disabled={props.disabled}\r\n                    className=\"d-n\"\r\n                    name={props.name}\r\n                    value={props.value}\r\n                    defaultChecked={props.defaultChecked || false}\r\n                    onChange={handleChange}\r\n                /> : <input\r\n                        id={id}\r\n                        trigger='core'\r\n                        type=\"checkbox\"\r\n                        disabled={props.disabled}\r\n                        className=\"d-n\"\r\n                        name={props.name}\r\n                        value={props.value}\r\n                        checked={props.checked}\r\n                        onChange={handleChange}\r\n                    />\r\n            }\r\n            <label\r\n                htmlFor={id}\r\n                className=\"checkbox-fontstyle mb0\">\r\n                <span className=\"m0\">{props.label || ''}</span>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function CheckboxImageIn(props: CheckboxProps): JSX.Element {\r\n    const id = Math.random().toString(36).substring(2);\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        props.onChange && props.onChange(e);\r\n    };\r\n\r\n    return (\r\n        <div className={['checkbox-box-imgstyle d-il mr16 mb8', props.className].join(' ')}>\r\n            {\r\n                props.checked === undefined ? <input\r\n                    id={id}\r\n                    trigger='core'\r\n                    type=\"checkbox\"\r\n                    disabled={props.disabled}\r\n                    className=\"d-n\"\r\n                    name={props.name}\r\n                    value={props.value}\r\n                    defaultChecked={props.defaultChecked || false}\r\n                    onChange={handleChange}\r\n                /> : <input\r\n                        id={id}\r\n                        trigger='core'\r\n                        type=\"checkbox\"\r\n                        disabled={props.disabled}\r\n                        className=\"d-n\"\r\n                        name={props.name}\r\n                        value={props.value}\r\n                        checked={props.checked}\r\n                        onChange={handleChange}\r\n                    />\r\n            }\r\n            <label\r\n                htmlFor={id}\r\n                className=\"checkbox-imgstyle mb0\">\r\n                <img src={`${props.value}`} alt=\"\" />\r\n                <p className=\"m0\">{props.label}</p>\r\n                <div className=\"checkbox-mark\"><span>✓</span></div>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function CheckboxBorder(props: CheckboxProps): JSX.Element {\r\n    const id = Math.random().toString(36).substring(2);\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        props.onChange && props.onChange(e);\r\n    };\r\n\r\n    return (\r\n        <div className=\"trigger-box-border d-il mr16 mb8\">\r\n            {\r\n                props.checked === undefined ? <input\r\n                    id={id}\r\n                    trigger='core'\r\n                    type=\"checkbox\"\r\n                    disabled={props.disabled}\r\n                    className=\"d-n\"\r\n                    name={props.name}\r\n                    value={props.value}\r\n                    defaultChecked={props.defaultChecked || false}\r\n                    onChange={handleChange}\r\n                /> : <input\r\n                        id={id}\r\n                        trigger='core'\r\n                        type=\"checkbox\"\r\n                        disabled={props.disabled}\r\n                        className=\"d-n\"\r\n                        name={props.name}\r\n                        value={props.value}\r\n                        checked={props.checked}\r\n                        onChange={handleChange}\r\n                    />\r\n            }\r\n            <label\r\n                htmlFor={id}\r\n                className=\"trigger-border mb0\"\r\n            >\r\n                <span className=\"m0\">{props.label || ''}</span>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst GroupContainer = (Component: any) => function Group(props: CheckboxGroupProps): JSX.Element {\r\n    const name = Math.random().toString(36).substring(2);\r\n\r\n    const isInArray = (arr: string[], value: string | number): boolean | undefined => {\r\n        if (Array.isArray(arr)) {\r\n            return arr.indexOf(value as string) !== -1;\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        const { value, checked } = e.target;\r\n\r\n        let values: Array<string | number> = [];\r\n        let res: Array<string | number> = [];\r\n\r\n        // 可控\r\n        if (props.values) {\r\n            values = [...props.values];\r\n        } else {\r\n            // 非可控\r\n            values = [...(props?.defaultValue || [])];\r\n        }\r\n\r\n        if (checked) {\r\n            res = [...values, value];\r\n        } else {\r\n            const index = values.indexOf(value);\r\n            if (index !== -1) {\r\n                values.splice(index, 1);\r\n                res = [...values];\r\n            }\r\n        }\r\n        props.onChange && props.onChange(res);\r\n    };\r\n\r\n    return (\r\n        <div className={props.className || ''}>\r\n            {\r\n                props.option.map((item, index) => {\r\n                    const componentProps = {\r\n                        defaultChecked: isInArray(props.defaultValue || [], item.value),\r\n                        checked: isInArray(props.values || [], item.value),\r\n                        name: name,\r\n                        label: item.label,\r\n                        value: item.value,\r\n                        disabled: item.disabled || props.disabled,\r\n                        display: item.display,\r\n                        onChange: onChange\r\n                    };\r\n                    return <Component {...componentProps} key={index} />;\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nCheckbox.Group = GroupContainer(Checkbox);\r\nCheckbox.GroupFontIn = GroupContainer(CheckboxFontIn);\r\nCheckbox.GroupBorder = GroupContainer(CheckboxBorder);\r\nCheckbox.GroupImageIn = GroupContainer(CheckboxImageIn);\r\n","import { Button, Col, Collapse, DatePicker, Form, FormInstance, Input, message, Radio, Row, Steps, Upload } from 'antd'\nimport { Rule, RuleObject } from 'antd/lib/form'\nimport Select, { LabeledValue } from 'antd/lib/select'\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport moment from \"moment\";\nimport { InboxOutlined, MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport InputSearch from '../InputSearch/InputSearch';\nimport FileUploadPlus from '../FileUploadPlus/FileUploadPlus';\nimport ImageUploadPlus from '../ImageUploadPlus/ImageUploadPlus';\nimport Checkbox from '../CheckoutGroupPlus/CheckoutGroupPlus';\n\ninterface IProps {\n    primaryKey?: string\n    form?: FormInstance\n    config?: IDynamicFormConfigItem[]\n    configGroup?: IDynamicFormGroupConfigItem[]\n    formChangeRes?: IFormChangeRes\n    linkageConfig?: ILinkageConfig[]\n    onRetryInfoChange?: (value: string) => void\n}\n\nexport interface ILinkageConfig {\n    dep: string[]\n    effect: string\n    effectOption: Record<string | number, LabeledValue[]>\n}\n\ninterface IFormChangeRes {\n    currentChange: Record<string, any>\n    allValues: Record<string, any>\n}\nexport interface IDynamicFormGroupConfigItem {\n    expanded: boolean\n    group: string\n    config: IDynamicFormConfigItem[]\n}\n\nexport interface IDynamicFormConfigItem {\n    name: string\n    label: string\n    type: TDynamicFormType\n    defaultValue?: number | string\n    required?: boolean\n    placeHolder?: string\n    options?: LabeledValue[]\n    rules?: Rule[]\n    disable?: boolean\n    description?: any\n    multiple?: boolean,\n    list?: IDynamicFormConfigItem[]\n    data: Record<string, any>\n}\n\nexport type TDynamicFormType = 'input' | 'textArea' | 'select' | 'datePicker' | 'rangePicker' | 'radio' | 'checkout' | 'match-input' | 'input-select' | 'fileUpload' | 'imageUpload' | 'audioUpload' | 'videoUpload' | 'imageSelect';\n\nexport function calculateId(strList: string[]): number {\n    const str2Num = (str: string) => {\n        const res = (str || '').split('').reduce((pre, next) => pre + next.charCodeAt(0), 0)\n        return res\n    }\n    const sum = strList.reduce((pre, next) => pre + str2Num(next), 0)\n    return sum\n}\n\nexport default function DynamicForm(props: IProps) {\n\n    const [current, setCurrent] = useState(0);\n    const [currentConfig, _setCurrentConfig] = useState(props.config)\n    const currentConfigRef = useRef(props.config);\n    const setCurrentConfig = (data: IDynamicFormConfigItem[] | undefined): void => {\n        currentConfigRef.current = data;\n        _setCurrentConfig(data);\n    };\n\n    const [currentConfigGroup, _setCurrentConfigGroup] = useState(props.configGroup)\n    const currentConfigGroupRef = useRef(props.configGroup);\n    const setCurrentConfigGroup = (data: IDynamicFormGroupConfigItem[] | undefined): void => {\n        currentConfigGroupRef.current = data;\n        _setCurrentConfigGroup(data);\n    };\n\n    const findOptionInLinkAge = (field: string, config: ILinkageConfig[]): Array<{\n        effect: string\n        option: LabeledValue[]\n    }> => {\n        const res = config.filter(configItem => configItem.dep.includes(field)).map(item => {\n            const values = item.dep.map(item => props.form?.getFieldValue(item)).filter(item => !(item === undefined || item === null))\n            const valueId = calculateId(values)\n            return {\n                effect: item.effect,\n                option: item.effectOption[valueId] || []\n            }\n        })\n        return res\n    }\n\n    const setValueInConfig = (field: string, props: Record<string, any>) => {\n        const tarConfig = currentConfigRef.current ? [...currentConfigRef.current] : []\n        if (tarConfig) {\n            for (let i = 0; i < tarConfig.length; i++) {\n                const item = tarConfig[i];\n                if (item.name === field) {\n                    tarConfig[i] = {\n                        ...item,\n                        ...props\n                    }\n                }\n            }\n        }\n        setCurrentConfig(tarConfig)\n    }\n\n    const setValueInConfigGroup = (field: string, props: Record<string, any>) => {\n        const tarConfigGroup = currentConfigGroupRef.current ? [...currentConfigGroupRef.current] : []\n        for (let i = 0; i < tarConfigGroup.length; i++) {\n            const configList = [...tarConfigGroup[i].config];\n            for (let j = 0; j < configList.length; j++) {\n                const item = configList[j];\n                if (item.name === field) {\n                    configList[j] = {\n                        ...item,\n                        ...props\n                    }\n                }\n            }\n            tarConfigGroup[i] = {\n                ...tarConfigGroup[i],\n                config: configList\n            }\n        }\n        setCurrentConfigGroup(tarConfigGroup)\n    }\n\n    const resetFieldProps = (field: string, linkageConfig: ILinkageConfig[]) => {\n        const optionInlinkAge = findOptionInLinkAge(field, linkageConfig)\n        optionInlinkAge.forEach(item => {\n            props.form?.setFieldsValue({ [item.effect]: undefined })\n            setValueInConfig(item.effect, { options: item.option })\n            setValueInConfigGroup(item.effect, { options: item.option })\n        })\n    }\n\n    useEffect(() => {\n        if (props.formChangeRes && props.linkageConfig) {\n            const { currentChange } = props.formChangeRes\n            resetFieldProps(Object.keys(currentChange)[0], props.linkageConfig)\n        }\n    }, [props.formChangeRes])\n\n    // 表单联动初始化\n    useEffect(() => {\n        setCurrentConfig(props.config)\n        setCurrentConfigGroup(props.configGroup)\n        const formValues = props.form?.getFieldsValue() || {}\n        Object.entries(formValues).forEach(([key, value]) => {\n            if (value !== undefined) {\n                resetFieldProps(key, props.linkageConfig || [])\n            }\n        })\n\n    }, [props.configGroup, props.config])\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        setCurrent(current - 1);\n    };\n\n    const renderImageUpload = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <ImageUploadPlus />\n        </Form.Item>\n    }\n\n    const renderFileUpload = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <FileUploadPlus />\n        </Form.Item>\n    }\n\n    const renderVideoUpload = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <FileUploadPlus type=\"video\" />\n        </Form.Item>\n    }\n\n    const renderAudioUpload = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <FileUploadPlus type=\"audio\" />\n        </Form.Item>\n    }\n\n    const renderInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules: Rule[] = [\n        //     { required: config.required, message: `请输入${config.label}` },\n        //     config.rule ? { pattern: new RegExp(`/^${config.rule}$/`), message: '请按正确的规则输入' } : undefined,\n        // ].filter(item => !!item) as Rule[]\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <Input disabled={config.disable} placeholder={`请输入${config.label}`} />\n        </Form.Item>\n    }\n\n    const renderMatchInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n\n        return <Form.Item key={`dynamicForm_${config.name}_noStyle`} noStyle shouldUpdate={(pre, next) => {\n            // todo:更新有点问题\n            // return pre[config.name] != pre[config.name]\n            return JSON.stringify(pre) != JSON.stringify(next)\n        }}>\n            {\n                ({ getFieldValue, setFieldsValue }) => {\n                    const templateText = `${config.defaultValue}`\n                    const matchList = templateText.match(/\\$\\{\\w*}/gi) || []\n                    let value = templateText\n                    matchList.forEach(item => {\n                        const itemKey = item.replace(/^\\$\\{/, '').replace(/\\}$/, '')\n                        const itemValue = getFieldValue(itemKey)\n                        if (itemValue !== undefined) {\n                            value = value.replace(item, itemValue)\n                        }\n                    })\n\n                    if (getFieldValue(config.name) !== value) {\n                        setFieldsValue({\n                            [config.name]: value\n                        })\n                    }\n\n                    return <Form.Item\n                        key={`dynamicForm_${config.name}`}\n                        label={config.label}\n                        name={config.name}\n                        rules={config.rules}\n                        extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n                        {...itemProps}\n                    >\n                        <Input disabled={true} />\n                    </Form.Item>\n                }\n            }\n        </Form.Item>\n    }\n\n    const renderInputSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `请选择${config.label}` },\n        // ]\n        const options: string[] = (config.options || []).map(item => item.label as string)\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <InputSearch isOpenSearchMatch={true} disabled={config.disable} placeholder={`请选择${config.label}`} options={options} />\n        </Form.Item>\n    }\n\n    const renderTextArea = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <Input.TextArea autoSize={{ minRows: 4 }} disabled={config.disable} placeholder={`请输入${config.label}`} />\n        </Form.Item>\n    }\n\n    const renderSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `请选择${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <Select\n                onClick={() => {\n                    console.log('click', props.form?.getFieldsValue())\n                    // props.form?.setFieldsValue({ app_group: \"g_other_tme_infrastructure_tme_central_kuwo\" })\n                }}\n                style={{ width: '100%' }}\n                mode={config.multiple ? 'multiple' : undefined}\n                onChange={(value) => {\n                    !!config.data.retry_info && props.onRetryInfoChange && props.onRetryInfoChange(value)\n                }}\n                showSearch\n                disabled={config.disable}\n                optionFilterProp=\"label\"\n                placeholder={`请选择${config.label}`}\n                options={options} />\n        </Form.Item>\n    }\n\n    const renderImageSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `请选择${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <Checkbox.GroupImageIn\n                option={options} />\n        </Form.Item>\n    }\n\n    const renderRadio = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `请选择${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            {...itemProps}\n        >\n            <Radio.Group options={options} />\n        </Form.Item>\n    }\n    const renderDatePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name=\"fromDate\"\n            rules={[{ required: true, message: '请选择时间' }]}\n            {...itemProps}\n        >\n            <DatePicker showTime disabledDate={(current) => {\n                return current && current > moment().endOf('day');\n            }} />\n        </Form.Item>\n    }\n    const renderRangePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name=\"fromDate\"\n            rules={[{ required: true, message: '请选择时间' }]}\n            {...itemProps}\n        >\n            <DatePicker showTime disabledDate={(current) => {\n                return current && current > moment().endOf('day');\n            }} />\n        </Form.Item>\n    }\n\n    const dispatchRenderFormItem = (item: IDynamicFormConfigItem, itemProps: Record<string, any> = {}): JSX.Element | null => {\n        switch (item.type) {\n            case 'imageSelect':\n                return renderImageSelect(item, itemProps)\n            case 'imageUpload':\n                return renderImageUpload(item, itemProps)\n            case 'fileUpload':\n                return renderFileUpload(item, itemProps)\n            case 'videoUpload':\n                return renderVideoUpload(item, itemProps)\n            case 'audioUpload':\n                return renderAudioUpload(item, itemProps)\n            case 'input':\n                return renderInput(item, itemProps)\n            case 'match-input':\n                return renderInput(item, itemProps)\n            // return renderMatchInput(item, itemProps)\n            case 'input-select':\n                return renderInputSelect(item, itemProps)\n            case 'textArea':\n                return renderTextArea(item, itemProps)\n            case 'select':\n                return renderSelect(item, itemProps)\n            case 'datePicker':\n                return renderDatePicker(item, itemProps)\n            case 'rangePicker':\n                return renderRangePicker(item, itemProps)\n            case 'radio':\n                return renderRadio(item, itemProps)\n            default:\n                return null\n        }\n    }\n\n    const renderFormItem = (config: IDynamicFormConfigItem[]): Array<any | null> => {\n        return (config || []).map(item => {\n            if (item.list && item.list.length) {\n                const formList = <Form.List key={`dynamicForm_${item.name}`} name={item.name}>\n                    {(fields, { add, remove }) => (\n                        <>\n                            {fields.map(({ key, name, ...restField }) => (\n                                <div key={key} className=\"bor b-side pt32 plr16 mb16\">\n                                    {\n                                        item.list && item.list.map(listItem => {\n                                            return dispatchRenderFormItem(listItem, {\n                                                ...restField,\n                                                name: [name, listItem.name]\n                                            })\n                                        })\n                                    }\n                                    {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\n                                    <Form.Item wrapperCol={{ offset: 5 }}>\n                                        <Button danger onClick={() => remove(name)} block icon={<MinusCircleOutlined />}>\n                                            删除该项\n                                        </Button>\n                                    </Form.Item>\n                                </div>\n                            ))}\n                            <Form.Item noStyle className=\"w100\">\n                                <Button type=\"dashed\" className=\"w100\" onClick={() => add()} block icon={<PlusOutlined />}>\n                                    增加一项\n                                </Button>\n                            </Form.Item>\n                        </>\n                    )}\n                </Form.List>\n                return formList\n            } else {\n                return dispatchRenderFormItem(item)\n            }\n        })\n    }\n\n    return (\n        <>\n            <Form.Item\n                key={`dynamicForm_id`}\n                name={props.primaryKey || 'id'}\n                noStyle\n                hidden\n            >\n                <Input />\n            </Form.Item>\n            {/* {\n                props.configGroup && props.configGroup.length ?\n                    (props.configGroup || []).map(item => {\n                        return <div className=\"pb16\">\n                            <Row className=\"strong fs16 mb16 bg-module\"><Col ><span className=\"d-il pl4 bor-l b-theme ptb4\">{item.group}</span></Col></Row>\n                            {renderFormItem(item.config)}\n                        </div>\n                    }) : renderFormItem(props.config || [])\n            } */}\n            {\n                currentConfigGroup && currentConfigGroup.length ? <>\n                    <Steps current={current}>\n                        {\n                            (currentConfigGroup || []).map((item, index) => {\n                                return <Steps.Step key={index} title={item.group} />\n                            })\n                        }\n                    </Steps>\n                    <div className=\"pt32\">\n                        {\n                            (currentConfigGroup || []).map((item, index) => {\n                                return <div key={index} className={[current === index ? 'p-r z9' : 'p-a z-99 v-h l-10000'].join(' ')}>\n                                    {renderFormItem(item.config)}\n                                </div>\n                            })\n                        }\n                    </div>\n                    <div className=\"ta-c pt32\">\n                        {current > 0 && (\n                            <Button onClick={() => prev()}>\n                                上一步\n                            </Button>\n                        )}\n                        {current < (currentConfigGroup || []).length - 1 && (\n                            <Button type=\"primary\" className=\"ml16\" onClick={() => {\n                                if (props.form) {\n                                    const currentConfigGroupNameList = currentConfigGroup[current].config.map(item => item.name)\n                                    props.form.validateFields(currentConfigGroupNameList).then(() => {\n                                        next()\n                                    }).catch(err => {\n                                        console.log(err)\n                                    })\n                                } else {\n                                    next()\n                                }\n                            }}>\n                                下一步\n                            </Button>\n                        )}\n                        <div>\n                            {current === (currentConfigGroup || []).length - 1 && (\n                                <div className=\"pt8 c-hint-b\">点击确定完成提交</div>\n                            )}\n                        </div>\n                    </div>\n                </> : renderFormItem(currentConfig || [])\n            }\n\n            {/* {\n                props.configGroup && props.configGroup.length ?\n                    <Collapse defaultActiveKey={(props.configGroup || []).map((item, idx) => idx)} ghost expandIconPosition='right'>\n                        {\n                            (props.configGroup || []).map((item, index) => {\n                                return <Collapse.Panel key={index} header={<span className=\"strong fs16 pl8 bor-l b-theme\">{item.group}</span>}>\n                                    <div className=\"pb16\">\n                                        {renderFormItem(item.config)}\n                                    </div>\n                                </Collapse.Panel>\n                            })\n                        }\n                    </Collapse> : renderFormItem(props.config || [])\n            } */}\n\n        </>\n    )\n}\n"],"names":["InputSearch","props","inputRef","id","Math","random","toString","substring","useState","options","dataCache","setDataCache","value","setValue","useEffect","dataFilter","isOpenSearchMatch","filter","item","indexOf","handleChange","onChange","highlightKeyWord","keyWord","index","preStr","nextStr","length","className","debounceScroll","fun","timer","time","args","clearTimeout","setTimeout","apply","debounce","onScrollButtom","labelName","htmlFor","style","width","disabled","placeholder","maxLength","e","target","onKeyPress","nativeEvent","keyCode","blur","onSearch","currentTarget","ref","element","SearchOutlined","onScroll","stopPropagation","scrollTop","clientHeight","scrollHeight","maxHeight","loading","right","top","map","onMouseDown","onClick","handleClick","FileUploadPlus","setFileLoading","fileList","setFileList","createMediaPreview","file","fileIndex","type","url","undefined","window","createObjectURL","URL","webkitURL","getObjectURL","key","currentFileList","splice","borderBottomLeftRadius","zIndex","DeleteOutlined","color","src","controls","borderRadius","showUploadList","customRequest","console","log","tarList","beforeUpload","maxCount","message","isLt2M","size","info","status","InboxOutlined","ImageUploadPlus","fileLoading","imageList","setImageList","imageUrl","imageIndex","orginList","CloseOutlined","alt","name","listType","method","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","isJpgOrPng","LoadingOutlined","PlusOutlined","marginTop","Checkbox","join","checked","trigger","defaultChecked","label","GroupContainer","Component","isInArray","arr","Array","isArray","values","res","defaultValue","option","componentProps","display","Group","GroupFontIn","GroupBorder","GroupImageIn","calculateId","strList","reduce","pre","next","split","charCodeAt","DynamicForm","current","setCurrent","config","currentConfig","_setCurrentConfig","currentConfigRef","useRef","setCurrentConfig","data","configGroup","currentConfigGroup","_setCurrentConfigGroup","currentConfigGroupRef","setCurrentConfigGroup","resetFieldProps","field","linkageConfig","optionInlinkAge","configItem","dep","includes","valueId","form","getFieldValue","effect","effectOption","findOptionInLinkAge","forEach","setFieldsValue","tarConfig","i","setValueInConfig","tarConfigGroup","configList","j","setValueInConfigGroup","formChangeRes","currentChange","Object","keys","formValues","getFieldsValue","entries","renderImageUpload","itemProps","rules","initialValue","extra","description","dangerouslySetInnerHTML","__html","renderFileUpload","renderVideoUpload","renderAudioUpload","renderInput","disable","renderInputSelect","renderTextArea","autoSize","minRows","renderSelect","mode","multiple","retry_info","onRetryInfoChange","showSearch","optionFilterProp","renderImageSelect","renderRadio","renderDatePicker","required","showTime","disabledDate","moment","endOf","renderRangePicker","dispatchRenderFormItem","renderFormItem","list","fields","add","remove","restField","listItem","wrapperCol","offset","danger","block","icon","MinusCircleOutlined","noStyle","primaryKey","hidden","Step","title","group","currentConfigGroupNameList","validateFields","then","catch","err"],"sourceRoot":""}