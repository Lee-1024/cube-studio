{"version":3,"file":"static/js/436.669995fd.chunk.js","mappings":"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","sources":["components/InputSearch/InputSearch.tsx","components/TableBox/TableBox.tsx","components/TitleHeader/TitleHeader.tsx","components/ModalForm/ModalForm.tsx","components/MixSearch/MixSearch.tsx","components/DynamicForm/DynamicForm.tsx","pages/ADUGTemplate.tsx"],"sourcesContent":["import { SearchOutlined } from '@ant-design/icons';\nimport { Input } from 'antd';\nimport React, { useState, ChangeEvent, useEffect } from 'react';\nimport './InputSearch.less';\n\ninterface IProps {\n    labelName?: string,\n    width?: string,\n    placeholder?: string,\n    maxLength?: number,\n    maxHeight?: number,\n    // 是否开启前端搜索匹配\n    isOpenSearchMatch?: boolean,\n    loading?: boolean | JSX.Element,\n    // 配置提示列表\n    options?: string[],\n    // 当配置value时，即为可控组件\n    value?: string,\n    disabled?: boolean\n    // 按回车时回调\n    onSearch?: (value: string) => void,\n    // 输入字符、按下回车时回调\n    onChange?: (value: string) => void,\n    // 点击option中的item\n    onClick?: (value: string) => void,\n    // 滚动条到底时触发\n    onScrollButtom?: () => void\n}\n\nexport default function InputSearch(props: IProps): JSX.Element {\n    const id = Math.random().toString(36).substring(2);\n    let inputRef: any;\n\n    const [dataCache, setDataCache] = useState<string[]>(props.options || []);\n    const [value, setValue] = useState(props.value || '');\n\n    useEffect(() => {\n        const dataFilter = props.isOpenSearchMatch ? (props.options || []).filter(item => {\n            return item.indexOf(value) !== -1;\n        }) : (props.options || []);\n        setDataCache(dataFilter);\n    }, [props.options]);\n\n    useEffect(() => {\n        setValue(props.value || '');\n        // props.onChange && props.onChange(props.value);\n    }, [props.value]);\n\n    const handleChange = (value: string): void => {\n        setValue(value);\n        props.onChange && props.onChange(value);\n    };\n\n    const handleClick = (value: string): void => {\n        handleChange(value);\n        props.onClick && props.onClick(value);\n    };\n\n    const handleEnterKey = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n        // 回车\n        if (e.nativeEvent.keyCode === 13) {\n            inputRef.blur && inputRef.blur();\n            props.onSearch && props.onSearch(e.currentTarget.value);\n        }\n    };\n\n    const highlightKeyWord = (item: string): JSX.Element => {\n        const keyWord = value;\n        const index = item.indexOf(value);\n        if (index === -1) {\n            return <span>{item}</span>;\n        }\n        const preStr = item.substring(0, index);\n        const nextStr = item.substring(index + value.length);\n        return <span>{preStr}<span className=\"highlight\">{keyWord}</span>{nextStr}</span>;\n    };\n\n    const debounce = (fun: any, time = 500): any => {\n        let timer: ReturnType<typeof setTimeout>;\n        return function (...args: any): void {\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                fun && fun.apply(null, [...args]);\n            }, time);\n        };\n    };\n\n    const debounceScroll = debounce(props.onScrollButtom);\n\n    const handleScroll = (e: React.UIEvent<HTMLElement>): void => {\n        e.stopPropagation();\n        // console.log({\n        //     event: e,\n        //     target: e.target, // Note 1* scrollTop is undefined on e.target\n        //     currentTarget: e.currentTarget,\n        //     scrollTop: e.currentTarget.scrollTop,\n        //     scrollHeight: e.currentTarget.scrollHeight,\n        //     clientHeight: e.currentTarget.clientHeight\n        // });\n        const { currentTarget } = e;\n        const { scrollTop, clientHeight, scrollHeight } = currentTarget;\n        const difference = scrollHeight - clientHeight - scrollTop;\n        if (difference < 20) {\n            props.onScrollButtom && debounceScroll();\n        }\n    };\n\n    return (\n        <div className=\"select-down-modern\">\n            {\n                props.labelName ? <label htmlFor={id} className=\"pb4 mb0 fs12 d-b\">{props.labelName}</label> : null\n            }\n            <div className=\"p-r d-f ac\" style={{ width: props.width || 100 + '%' }}>\n                <Input\n                    style={{ width: '100%' }}\n                    disabled={props.disabled}\n                    id={id}\n                    placeholder={props.placeholder || ''}\n                    maxLength={props.maxLength || 200}\n                    onChange={(e: ChangeEvent<HTMLInputElement>): void => handleChange(e.target.value)}\n                    onKeyPress={handleEnterKey}\n                    value={value}\n                    ref={element => inputRef = element}\n                />\n                <SearchOutlined className=\"p-a r0 mr8\" />\n            </div>\n\n            {\n                // 输入提示\n                dataCache.length ? <ul className=\"select-option shadow\" onScroll={handleScroll} style={{ 'maxHeight': `${props.maxHeight}px` }}>\n                    {\n                        props.loading ? <div className=\"p-s z9 ta-r\" style={{ right: `${0}px`, top: `${0}px` }}>\n                            <div className=\"d-il p-a\" style={{ right: `${8}px`, top: `${0}px` }}></div>\n                        </div> : null\n                    }\n                    {\n                        dataCache.map((item, index) => {\n                            return <li className=\"ellip1\" onMouseDown={(): void => handleClick(item)} key={index}>{highlightKeyWord(item)}</li>;\n                        })\n                    }\n                </ul> : null\n            }\n        </div>\n    );\n}","import React, { ReactNode, useEffect, useState } from 'react';\nimport { Row, Col, Space, Table, ConfigProvider, Button, Modal, Tabs, message, Checkbox } from 'antd';\nimport './TableBox.less';\nimport { TablePaginationConfig } from 'antd/lib/table/Table';\nimport emptyImg from '../../images/emptyBg.png';\nimport { GetRowKey, SorterResult, TableRowSelection } from 'antd/lib/table/interface';\nimport ExportJsonExcel from 'js-export-excel';\nimport { Resizable } from 'react-resizable';\n\nconst CopyToClipboard = require('react-copy-to-clipboard');\n\ninterface IProps {\n\tsize?: 'large' | 'middle' | 'small'\n\ttableKey?: string\n\trowKey?: string | GetRowKey<any>;\n\ttitleNode?: string | ReactNode;\n\tbuttonNode?: ReactNode;\n\tdataSource: any;\n\tcolumns: any;\n\tpagination?: false | TablePaginationConfig;\n\tscroll?:\n\t| ({\n\t\tx?: string | number | true | undefined;\n\t\ty?: string | number | undefined;\n\t} & {\n\t\tscrollToFirstRowOnChange?: boolean | undefined;\n\t})\n\t| undefined;\n\tloading?: boolean;\n\trowSelection?: TableRowSelection<any>;\n\tcancelExportData?: boolean;\n\tonChange?: (\n\t\tpagination: TablePaginationConfig,\n\t\tfilters: Record<string, (string | number | boolean)[] | null>,\n\t\tsorter: SorterResult<any> | SorterResult<any>[],\n\t) => void;\n}\n\nconst customizeRenderEmpty = () => (\n\t<Row justify=\"center\" align=\"middle\" style={{ height: 360, flexDirection: 'column' }}>\n\t\t<img src={emptyImg} style={{ width: 266 }} alt=\"\" />\n\t\t<div>暂无数据</div>\n\t</Row>\n);\n\nconst ResizableTitle = ({ onResize, width, ...restProps }: any) => {\n\tif (!width) {\n\t\treturn <th {...restProps} />;\n\t}\n\n\treturn (\n\t\t<Resizable\n\t\t\twidth={width}\n\t\t\theight={0}\n\t\t\thandle={\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"react-resizable-handle\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonResize={onResize}\n\t\t\tdraggableOpts={{ enableUserSelectHack: false }}\n\t\t>\n\t\t\t<th {...restProps} style={{ ...restProps?.style, userSelect: 'none' }} />\n\t\t</Resizable>\n\t);\n};\n\nconst TableBox = (props: IProps) => {\n\tconst [exportDataVisible, setExportDataVisible] = useState(false);\n\tconst [dataFormat, setDataFormat] = useState<{ header: any[]; data: any[] }>({\n\t\theader: [],\n\t\tdata: [],\n\t});\n\tconst [filterValue, setFilterValue] = useState<any[]>([]);\n\n\t// 可伸缩列设置\n\tconst [cols, setCols] = useState(props.columns);\n\tconst handleResize = (index: any) => {\n\t\treturn (_: any, { size }: any) => {\n\t\t\tif (size.width < 100) return\n\t\t\tconst temp = [...cols];\n\t\t\ttemp[index] = { ...temp[index], width: size.width };\n\t\t\tconst tableWidth = temp.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 200\n\t\t\tlocalStorage.setItem(props.tableKey || '', JSON.stringify(temp))\n\t\t\t// console.log(currentTableScroll, temp);\n\t\t\tsetCurrentTableScroll({ ...currentTableScroll, x: tableWidth })\n\t\t\tsetCols(temp);\n\t\t};\n\t};\n\tconst customColumns = cols.map((col: any, index: any) => {\n\t\treturn {\n\t\t\t...col,\n\t\t\twidth: col.width || 200,\n\t\t\tonHeaderCell: (column: any) => {\n\t\t\t\treturn {\n\t\t\t\t\twidth: column.width,\n\t\t\t\t\tonResize: handleResize(index),\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t});\n\tconst [currentTableScroll, setCurrentTableScroll] = useState(props.scroll)\n\n\tuseEffect(() => {\n\t\tsetCols(props.columns);\n\t}, [props.columns]);\n\n\tuseEffect(() => {\n\t\tsetCurrentTableScroll(props.scroll);\n\t}, [props.scroll]);\n\n\tuseEffect(() => {\n\t\tif (props.dataSource) {\n\t\t\tconst columns = props.columns.filter((item: any) => ~filterValue.indexOf(item.dataIndex));\n\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t}\n\t}, [props.dataSource, props.columns]);\n\n\tconst handdleFilterHeader = (dataColumns = [], data: any[]) => {\n\t\tconst columns = dataColumns.map((item: any) => item.dataIndex).filter((item: string) => item !== 'handle');\n\t\tconst sheetHeader = dataColumns.map((item: any) => item.title).filter((item: string) => item !== '操作');\n\t\tconst tarData: any = [];\n\n\t\tdata.forEach((dataRow: any) => {\n\t\t\tconst row: any = {};\n\t\t\tcolumns.map((colName: string) => {\n\t\t\t\tconst res = dataRow[colName];\n\t\t\t\trow[colName] = res || '';\n\t\t\t});\n\t\t\ttarData.push(row);\n\t\t});\n\n\t\tsetDataFormat({\n\t\t\theader: sheetHeader,\n\t\t\tdata: tarData,\n\t\t});\n\t};\n\n\tconst handleClickOutputExcel = () => {\n\t\tconst option: any = {};\n\t\toption.fileName = 'result';\n\t\toption.datas = [\n\t\t\t{\n\t\t\t\tsheetData: dataFormat.data,\n\t\t\t\tsheetName: 'sheet',\n\t\t\t\tsheetHeader: dataFormat.header,\n\t\t\t},\n\t\t];\n\t\tconst toExcel = new ExportJsonExcel(option);\n\t\ttoExcel.saveExcel();\n\t};\n\n\tconst handleExportJira = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\t'|' +\n\t\t\t\theader.join('|') +\n\t\t\t\t'|' +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\t'|' +\n\t\t\t\t\trowKey.join('|') +\n\t\t\t\t\t'|' +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\n\t\treturn str;\n\t};\n\n\tconst handleExportText = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\theader.join('\t') +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\trowKey.join('\t') +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\t\treturn str;\n\t};\n\n\treturn (\n\t\t<Space className=\"tablebox\" direction=\"vertical\" size=\"middle\">\n\t\t\t<Modal\n\t\t\t\twidth={1000}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tcentered={true}\n\t\t\t\tbodyStyle={{ maxHeight: 500, overflow: 'auto' }}\n\t\t\t\tvisible={exportDataVisible}\n\t\t\t\ttitle={'导出数据'}\n\t\t\t\tonCancel={() => {\n\t\t\t\t\tsetExportDataVisible(false);\n\t\t\t\t}}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div style={{ position: 'relative' }}>\n\t\t\t\t\t<div className=\"mb16\"><span className=\"pr8\">选择需要导出的列：</span><Checkbox.Group\n\t\t\t\t\t\toptions={props.columns\n\t\t\t\t\t\t\t.map((item: any) => ({ label: item.title, value: item.dataIndex }))\n\t\t\t\t\t\t\t.filter((item: any) => item.value !== 'handle')}\n\t\t\t\t\t\tdefaultValue={[]}\n\t\t\t\t\t\tvalue={filterValue}\n\t\t\t\t\t\tonChange={(values: any) => {\n\t\t\t\t\t\t\tsetFilterValue(values);\n\t\t\t\t\t\t\tconst columns = props.columns.filter((item: any) => ~values.indexOf(item.dataIndex));\n\t\t\t\t\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/></div>\n\t\t\t\t\t<div style={{ position: 'absolute', right: 0, bottom: 0 }}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue(\n\t\t\t\t\t\t\t\t\tprops.columns\n\t\t\t\t\t\t\t\t\t\t.map((item: any) => item.dataIndex)\n\t\t\t\t\t\t\t\t\t\t.filter((item: any) => item !== 'handle'),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\thanddleFilterHeader(props.columns, props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t全选\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue([]);\n\t\t\t\t\t\t\t\thanddleFilterHeader([], props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t反选\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Tabs>\n\t\t\t\t\t<Tabs.TabPane tab=\"Wiki格式\" key=\"jira\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportJira()} onCopy={() => message.success('已复制到粘贴板')}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportJira()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Text格式\" key=\"test\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportText()} onCopy={() => message.success('已复制到粘贴板')}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportText()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Excel格式\" key=\"excel\">\n\t\t\t\t\t\t<Row justify=\"center\" align=\"middle\" style={{ minHeight: 100 }}>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={handleClickOutputExcel}>\n\t\t\t\t\t\t\t\t\t导出Excel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t</Tabs>\n\t\t\t</Modal>\n\t\t\t{\n\t\t\t\tprops.titleNode || props.buttonNode || !props.cancelExportData ? <Row justify=\"space-between\" align=\"middle\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">{props.titleNode}</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">\n\t\t\t\t\t\t\t{props.buttonNode}\n\t\t\t\t\t\t\t{props.cancelExportData ? null : (\n\t\t\t\t\t\t\t\t<Button style={{ marginLeft: 6 }} onClick={() => setExportDataVisible(true)}>\n\t\t\t\t\t\t\t\t\t导出数据\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> : null\n\t\t\t}\n\t\t\t<ConfigProvider renderEmpty={customizeRenderEmpty}>\n\t\t\t\t<Table\n\t\t\t\t\tsize={props.size || 'middle'}\n\t\t\t\t\trowKey={props.rowKey ? props.rowKey : 'id'}\n\t\t\t\t\tdataSource={props.dataSource}\n\t\t\t\t\t// columns={props.columns}\n\t\t\t\t\tcomponents={{ header: { cell: ResizableTitle } }}\n\t\t\t\t\tcolumns={customColumns}\n\t\t\t\t\tpagination={props.pagination !== false ? { ...props.pagination } : false}\n\t\t\t\t\tscroll={currentTableScroll}\n\t\t\t\t\tloading={props.loading}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t\trowSelection={props.rowSelection}\n\t\t\t\t/>\n\t\t\t</ConfigProvider>\n\t\t</Space>\n\t);\n};\n\nexport default TableBox;\n","import React, { ReactNode } from 'react';\nimport { Row, Typography, Col, Space } from 'antd';\nimport './TitleHeader.less';\n\nconst { Title } = Typography;\n\ninterface IProps {\n    title: ReactNode | string;\n    children?: ReactNode;\n    noBorderBottom?: boolean;\n    breadcrumbs?: ReactNode | string;\n}\n\nconst TitleHeader = (props: IProps) => {\n    const styles: React.CSSProperties = { position: 'sticky', top: 0 }\n    return (\n        <Row\n            className=\"title-header\"\n            justify=\"space-between\"\n            align=\"middle\"\n            style={props.noBorderBottom ? { borderBottom: 'none', ...styles } : styles}>\n            <div>\n                <Title className=\"d-il mr12\" level={5} style={{ marginBottom: 10 }}>\n                    {props.title}\n                </Title>\n                <div className=\"d-il\">\n                    {props.breadcrumbs}\n                </div>\n            </div>\n\n            <Col>\n                <Space>{props.children ? props.children : null}</Space>\n            </Col>\n        </Row>\n    );\n};\n\nexport default TitleHeader;\n","import React, { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { Modal, Form, Spin, Input, FormInstance } from 'antd';\n\ninterface ModalFormProps {\n\tvisible: boolean;\n\tonCreate: (values: any, form: FormInstance<any>) => void;\n\tonCancel: () => void;\n\tloading?: boolean;\n\tchildren?: any;\n\ttitle?: string;\n\tformData?: Record<string, any>;\n\twidth?: number;\n\tonValuesChange?: () => {}\n}\n\nconst ModalForm = (props: ModalFormProps): JSX.Element => {\n\tconst [form] = Form.useForm();\n\tconst [, updateState] = useState<any>();\n\tconst forceUpdate = React.useCallback(() => updateState({}), []);\n\n\tuseEffect(() => {\n\t\tif (props.formData) {\n\t\t\tform.setFieldsValue(props.formData);\n\t\t}\n\t}, [props]);\n\n\tconst [formChangeRes, setFormChangeRes] = useState<{\n\t\tcurrentChange: Record<string, any>\n\t\tallValues: Record<string, any>\n\t}>({\n\t\tcurrentChange: {},\n\t\tallValues: {}\n\t})\n\n\t// const propsChildrenMemo = useMemo(() => props.children(form), [])\n\n\treturn (\n\t\t<Modal\n\t\t\t// confirmLoading={props.loading}\n\t\t\tdestroyOnClose={true}\n\t\t\tmaskClosable={false}\n\t\t\twidth={props.width || 680}\n\t\t\tvisible={props.visible}\n\t\t\ttitle={props.title}\n\t\t\tokText=\"确定\"\n\t\t\tcancelText=\"取消\"\n\t\t\tonCancel={() => {\n\t\t\t\tform.resetFields();\n\t\t\t\tprops.onCancel();\n\t\t\t}}\n\t\t\tonOk={() => {\n\t\t\t\tconsole.log(form.getFieldsValue())\n\t\t\t\tform.validateFields()\n\t\t\t\t\t.then((values) => {\n\t\t\t\t\t\tprops.onCreate(values, form);\n\t\t\t\t\t\t// form.resetFields();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((info) => {\n\t\t\t\t\t\t// console.log('Validate Failed:', info);\n\t\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t<Spin spinning={props.loading}>\n\t\t\t\t<Form onValuesChange={(value, allValues) => {\n\t\t\t\t\tsetFormChangeRes({\n\t\t\t\t\t\tcurrentChange: value,\n\t\t\t\t\t\tallValues\n\t\t\t\t\t})\n\t\t\t\t}} labelCol={{ span: 5 }} wrapperCol={{ span: 19 }} form={form} layout=\"horizontal\" name=\"form_in_modal\">\n\t\t\t\t\t{props.children && Object.prototype.toString.call(props.children) === '[object Function]'\n\t\t\t\t\t\t? props.children(form, formChangeRes)\n\t\t\t\t\t\t: props.children}\n\t\t\t\t</Form>\n\t\t\t</Spin>\n\t\t</Modal>\n\t);\n};\n\nexport default ModalForm;\n","import React, { ReactNode, useState, useEffect, ReactText } from 'react';\nimport { Form, Row, Col, Input, Select, Button } from 'antd';\nimport { DeleteOutlined, PlusOutlined, DownOutlined, UpOutlined } from '@ant-design/icons';\nimport './MixSearch.less';\nimport { LabeledValue } from 'antd/lib/select';\n\nconst { Option } = Select;\nexport interface IMixSearchParamItem {\n\tname: string\n\ttype: TMixSearchType\n\ttitle?: string\n\tdefalutValue?: any\n\tplaceHolder?: string\n\toption?: LabeledValue[]\n\tmultiple?: boolean\n\tindexKey?: number\n\tused?: boolean\n}\n\nexport type TMixSearchType = 'input' | 'select' | 'datePicker' | 'rangePicker'\n\ninterface IProps {\n\tparams?: IMixSearchParamItem[]\n\tvalues?: Array<{ key: ReactText | undefined, value: ReactText | undefined }>\n\tonChange: (values: Array<{ key: ReactText | undefined, value: ReactText | undefined }>) => void;\n}\n\nconst MixSearch = (props: IProps) => {\n\tconst [form] = Form.useForm();\n\tconst [collapsed, setCollapsed]: [boolean, any] = useState(false);\n\tconst [typeArr, setTypeArr]: [(string | undefined)[], any] = useState([]);\n\n\t// 序列化数据\n\tconst formatParamsData = (data?: IMixSearchParamItem[]) => {\n\t\treturn (data || []).map((item, indexKey) => ({ ...item, indexKey }))\n\t}\n\tconst [paramsData, setParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [currentParamsData, setCurrentParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [paramsDataMap, setParamsDataMap] = useState<Map<string, IMixSearchParamItem>>(new Map())\n\n\tuseEffect(() => {\n\t\tif (props.values) {\n\t\t\tconst group = props.values.length ? props.values : [{\n\t\t\t\tkey: undefined,\n\t\t\t\tvalue: undefined\n\t\t\t}]\n\t\t\tform.setFieldsValue({\n\t\t\t\tgroup\n\t\t\t})\n\n\t\t\tconst tarData = [...currentParamsData]\n\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\tfor (let j = 0; j < group.length; j++) {\n\t\t\t\t\tconst value = group[j];\n\t\t\t\t\tif (value !== undefined && group[j].key === tarData[i].name) {\n\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetCurrentParamsData(tarData)\n\t\t}\n\t}, [props.values])\n\n\tuseEffect(() => {\n\t\tif (props.params && props.params.length) {\n\t\t\tconst formatData = formatParamsData(props.params)\n\t\t\tsetParamsData(formatData)\n\t\t\tconst dataMap = paramsDataMap\n\t\t\tfor (let i = 0; i < formatData.length; i++) {\n\t\t\t\tconst param = formatData[i];\n\t\t\t\tdataMap.set(param.name, param)\n\t\t\t}\n\t\t\tsetParamsDataMap(dataMap)\n\t\t}\n\t}, [props.params])\n\n\t/**利用表单获取查询字段 */\n\tconst handleFinishForm = async (values: any): Promise<void> => {\n\t\tconsole.log(values);\n\t\tconst preVal = values['group'].filter(((item: any) => !!item.key))\n\t\tconst tarVal = preVal.map((item: any) => ({ key: item.key, value: item.value }))\n\t\tprops.onChange(tarVal);\n\t};\n\n\t/**展开收起 */\n\tconst handleCollapsed = (): void => {\n\t\tsetCollapsed(!collapsed);\n\t};\n\n\t/**选择筛选类型 */\n\tconst handleSelectType = (name: string, index: number): void => {\n\t\tform.resetFields([['group', index, 'value']]);\n\t\tlet arr = [...typeArr];\n\t\tarr[index] = name;\n\t\tsetTypeArr(arr);\n\t};\n\n\t/**根据选择的类型，渲染input或select */\n\tconst handleRenderValueEl = (index: number): ReactNode => {\n\t\tlet key = form.getFieldValue(['group', index, 'key']);\n\t\tif (key) {\n\t\t\tconst currentItem = paramsDataMap.get(key)\n\t\t\tif (currentItem?.type === 'input') {\n\t\t\t\treturn <Input\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdefaultValue={currentItem.defalutValue}\n\t\t\t\t\tplaceholder={currentItem.placeHolder}\n\t\t\t\t\tonPressEnter={() => handlePressEnter()} />\n\t\t\t} else if (currentItem?.type === 'select') {\n\t\t\t\tconst currentOptions = currentItem?.option || []\n\t\t\t\treturn <Select\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdropdownMatchSelectWidth={500}\n\t\t\t\t\tshowSearch\n\t\t\t\t\tmode={key === 'label' ? 'multiple' : undefined}\n\t\t\t\t\toptionFilterProp=\"label\"\n\t\t\t\t\toptions={currentOptions.map(item => ({ label: item.label, value: item.value }))}\n\t\t\t\t// onDropdownVisibleChange={(open) => handleDropdown(open, key)}\n\t\t\t\t/>\n\t\t\t}\n\t\t} else {\n\t\t\treturn <Input style={{ width: '65%' }} onPressEnter={() => handlePressEnter()} />;\n\t\t}\n\t};\n\n\t/**下拉获取对应的数据，并判断是否存在下拉数据，没有则请求，有则不请求 */\n\t// const handleDropdown = async (open: boolean, key: string): Promise<void> => {\n\t// \tif (open) {\n\t// \t\tif (selectionData[key]) {\n\t// \t\t\treturn;\n\t// \t\t}\n\t// \t\ttry {\n\t// \t\t\tlet res = await getSelections(key);\n\t// \t\t\tlet data = { ...selectionData };\n\t// \t\t\tdata[key] = res.data.data;\n\t// \t\t\tsetSelectionData(data);\n\t// \t\t} catch (error) { }\n\t// \t}\n\t// };\n\n\t/**输入框回车操作 */\n\tconst handlePressEnter = (): void => {\n\t\tform.validateFields();\n\t};\n\n\treturn (\n\t\t<Form\n\t\t\t// {...formConfig}\n\t\t\tclassName=\"cmdb-mixsearch bg-title\"\n\t\t\tform={form}\n\t\t\tonFinish={handleFinishForm}\n\t\t\tinitialValues={{\n\t\t\t\tgroup: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: undefined,\n\t\t\t\t\t\tvalue: undefined,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t>\n\t\t\t<Row className=\"cmdb-mixsearch-content\" gutter={16} style={{ marginLeft: 0, marginRight: 0, ...collapsed ? { height: 70 } : { height: 'auto' } }}>\n\t\t\t\t<Form.List name={`group`}>\n\t\t\t\t\t{(fields, { add, remove }) => {\n\t\t\t\t\t\treturn <>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfields.map((field, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`mixSearch_${field.key}_${index}`}>\n\t\t\t\t\t\t\t\t\t\t\t<Row align=\"middle\" gutter={8}>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <Col className=\"cmdb-mixsearch-name\">名称</Col> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input.Group compact>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'key']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: '请选择key' }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// initialValue={'testParams'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '35%' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"请选择\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// handleSelectType(value, index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst selectActionRemove = (value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).filter((item: any) => !!item).map((item: any) => item.key)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (!usedKey.includes(item.name)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectActionRemove(value)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{currentParamsData.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option style={{ display: item.used ? 'none' : 'inherit' }} key={`mixSearch_${item.name}_${index}`} value={item.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.title || item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshouldUpdate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'value']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: '请填写value' }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{handleRenderValueEl(index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Input.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-delete\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).map((item: any) => item ? item.key : undefined)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tremove(index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {index === fields.length - 1 && index < (paramsData.length - 1) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{paramsData.length !== fields.length && (\n\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add d-il\" onClick={() => {\n\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t}}\n\t\t\t\t</Form.List>\n\n\t\t\t\t<Col flex={1}>\n\t\t\t\t\t<Row justify=\"end\">\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t\t查询\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"cmdb-mixsearch-collapsed\">\n\t\t\t\t<Row onClick={() => handleCollapsed()} justify=\"center\" align=\"middle\">\n\t\t\t\t\t{collapsed ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Col>展开</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<DownOutlined />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Col>收起</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<UpOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t</Form>\n\t);\n};\n\nexport default MixSearch;\n","import { Button, Col, Collapse, DatePicker, Form, FormInstance, Input, message, Radio, Row, Steps } from 'antd'\nimport { Rule, RuleObject } from 'antd/lib/form'\nimport Select, { LabeledValue } from 'antd/lib/select'\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport moment from \"moment\";\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport InputSearch from '../InputSearch/InputSearch';\n\ninterface IProps {\n    primaryKey?: string\n    form?: FormInstance\n    config?: IDynamicFormConfigItem[]\n    configGroup?: IDynamicFormGroupConfigItem[]\n    formChangeRes?: IFormChangeRes\n    linkageConfig?: ILinkageConfig[]\n    onRetryInfoChange?: (value: string) => void\n}\n\nexport interface ILinkageConfig {\n    dep: string[]\n    effect: string\n    effectOption: Record<string | number, LabeledValue[]>\n}\n\ninterface IFormChangeRes {\n    currentChange: Record<string, any>\n    allValues: Record<string, any>\n}\nexport interface IDynamicFormGroupConfigItem {\n    expanded: boolean\n    group: string\n    config: IDynamicFormConfigItem[]\n}\n\nexport interface IDynamicFormConfigItem {\n    name: string\n    label: string\n    type: TDynamicFormType\n    defaultValue?: number | string\n    required?: boolean\n    placeHolder?: string\n    options?: LabeledValue[]\n    rules?: Rule[]\n    disable?: boolean\n    description?: any\n    multiple?: boolean,\n    list?: IDynamicFormConfigItem[]\n    data: Record<string, any>\n}\n\nexport type TDynamicFormType = 'input' | 'textArea' | 'select' | 'datePicker' | 'rangePicker' | 'radio' | 'checkout' | 'match-input' | 'input-select'\n\nexport function calculateId(strList: string[]): number {\n    const str2Num = (str: string) => {\n        const res = (str || '').split('').reduce((pre, next) => pre + next.charCodeAt(0), 0)\n        return res\n    }\n    const sum = strList.reduce((pre, next) => pre + str2Num(next), 0)\n    return sum\n}\n\nexport default function DynamicForm(props: IProps) {\n\n    const [current, setCurrent] = useState(0);\n    const [currentConfig, _setCurrentConfig] = useState(props.config)\n    const currentConfigRef = useRef(props.config);\n    const setCurrentConfig = (data: IDynamicFormConfigItem[] | undefined): void => {\n        currentConfigRef.current = data;\n        _setCurrentConfig(data);\n    };\n\n    const [currentConfigGroup, _setCurrentConfigGroup] = useState(props.configGroup)\n    const currentConfigGroupRef = useRef(props.configGroup);\n    const setCurrentConfigGroup = (data: IDynamicFormGroupConfigItem[] | undefined): void => {\n        currentConfigGroupRef.current = data;\n        _setCurrentConfigGroup(data);\n    };\n\n    const findOptionInLinkAge = (field: string, config: ILinkageConfig[]): Array<{\n        effect: string\n        option: LabeledValue[]\n    }> => {\n        const res = config.filter(configItem => configItem.dep.includes(field)).map(item => {\n            const values = item.dep.map(item => props.form?.getFieldValue(item)).filter(item => !(item === undefined || item === null))\n            const valueId = calculateId(values)\n            return {\n                effect: item.effect,\n                option: item.effectOption[valueId] || []\n            }\n        })\n        return res\n    }\n\n    const setValueInConfig = (field: string, props: Record<string, any>) => {\n        const tarConfig = currentConfigRef.current ? [...currentConfigRef.current] : []\n        if (tarConfig) {\n            for (let i = 0; i < tarConfig.length; i++) {\n                const item = tarConfig[i];\n                if (item.name === field) {\n                    tarConfig[i] = {\n                        ...item,\n                        ...props\n                    }\n                }\n            }\n        }\n        setCurrentConfig(tarConfig)\n    }\n\n    const setValueInConfigGroup = (field: string, props: Record<string, any>) => {\n        const tarConfigGroup = currentConfigGroupRef.current ? [...currentConfigGroupRef.current] : []\n        for (let i = 0; i < tarConfigGroup.length; i++) {\n            const configList = [...tarConfigGroup[i].config];\n            for (let j = 0; j < configList.length; j++) {\n                const item = configList[j];\n                if (item.name === field) {\n                    configList[j] = {\n                        ...item,\n                        ...props\n                    }\n                }\n            }\n            tarConfigGroup[i] = {\n                ...tarConfigGroup[i],\n                config: configList\n            }\n        }\n        setCurrentConfigGroup(tarConfigGroup)\n    }\n\n    const resetFieldProps = (field: string, linkageConfig: ILinkageConfig[]) => {\n        const optionInlinkAge = findOptionInLinkAge(field, linkageConfig)\n        optionInlinkAge.forEach(item => {\n            props.form?.setFieldsValue({ [item.effect]: undefined })\n            setValueInConfig(item.effect, { options: item.option })\n            setValueInConfigGroup(item.effect, { options: item.option })\n        })\n    }\n\n    useEffect(() => {\n        if (props.formChangeRes && props.linkageConfig) {\n            const { currentChange } = props.formChangeRes\n            resetFieldProps(Object.keys(currentChange)[0], props.linkageConfig)\n        }\n    }, [props.formChangeRes])\n\n    // 表单联动初始化\n    useEffect(() => {\n        setCurrentConfig(props.config)\n        setCurrentConfigGroup(props.configGroup)\n        const formValues = props.form?.getFieldsValue() || {}\n        Object.entries(formValues).forEach(([key, value]) => {\n            if (value !== undefined) {\n                resetFieldProps(key, props.linkageConfig || [])\n            }\n        })\n\n    }, [props.configGroup, props.config])\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        setCurrent(current - 1);\n    };\n\n    const renderInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules: Rule[] = [\n        //     { required: config.required, message: `请输入${config.label}` },\n        //     config.rule ? { pattern: new RegExp(`/^${config.rule}$/`), message: '请按正确的规则输入' } : undefined,\n        // ].filter(item => !!item) as Rule[]\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <Input disabled={config.disable} placeholder={`请输入${config.label}`} />\n        </Form.Item>\n    }\n\n    const renderMatchInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n\n        return <Form.Item key={`dynamicForm_${config.name}_noStyle`} noStyle shouldUpdate={(pre, next) => {\n            // todo:更新有点问题\n            // return pre[config.name] != pre[config.name]\n            return JSON.stringify(pre) != JSON.stringify(next)\n        }}>\n            {\n                ({ getFieldValue, setFieldsValue }) => {\n                    const templateText = `${config.defaultValue}`\n                    const matchList = templateText.match(/\\$\\{\\w*}/gi) || []\n                    let value = templateText\n                    matchList.forEach(item => {\n                        const itemKey = item.replace(/^\\$\\{/, '').replace(/\\}$/, '')\n                        const itemValue = getFieldValue(itemKey)\n                        if (itemValue !== undefined) {\n                            value = value.replace(item, itemValue)\n                        }\n                    })\n\n                    if (getFieldValue(config.name) !== value) {\n                        setFieldsValue({\n                            [config.name]: value\n                        })\n                    }\n\n                    return <Form.Item\n                        key={`dynamicForm_${config.name}`}\n                        label={config.label}\n                        name={config.name}\n                        rules={config.rules}\n                        extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n                        {...itemProps}\n                    >\n                        <Input disabled={true} />\n                    </Form.Item>\n                }\n            }\n        </Form.Item>\n    }\n\n    const renderInputSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `请选择${config.label}` },\n        // ]\n        const options: string[] = (config.options || []).map(item => item.label as string)\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <InputSearch isOpenSearchMatch={true} disabled={config.disable} placeholder={`请选择${config.label}`} options={options} />\n        </Form.Item>\n    }\n\n    const renderTextArea = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <Input.TextArea autoSize={{ minRows: 4 }} disabled={config.disable} placeholder={`请输入${config.label}`} />\n        </Form.Item>\n    }\n    const renderSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `请选择${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <Select\n                onClick={() => {\n                    console.log('click', props.form?.getFieldsValue())\n                    // props.form?.setFieldsValue({ app_group: \"g_other_tme_infrastructure_tme_central_kuwo\" })\n                }}\n                style={{ width: '100%' }}\n                mode={config.multiple ? 'multiple' : undefined}\n                onChange={(value) => {\n                    !!config.data.retry_info && props.onRetryInfoChange && props.onRetryInfoChange(value)\n                }}\n                showSearch\n                disabled={config.disable}\n                optionFilterProp=\"label\"\n                placeholder={`请选择${config.label}`}\n                options={options} />\n        </Form.Item>\n    }\n    const renderRadio = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `请选择${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            {...itemProps}\n        >\n            <Radio.Group options={options} />\n        </Form.Item>\n    }\n    const renderDatePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name=\"fromDate\"\n            rules={[{ required: true, message: '请选择时间' }]}\n            {...itemProps}\n        >\n            <DatePicker showTime disabledDate={(current) => {\n                return current && current > moment().endOf('day');\n            }} />\n        </Form.Item>\n    }\n    const renderRangePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name=\"fromDate\"\n            rules={[{ required: true, message: '请选择时间' }]}\n            {...itemProps}\n        >\n            <DatePicker showTime disabledDate={(current) => {\n                return current && current > moment().endOf('day');\n            }} />\n        </Form.Item>\n    }\n\n    const dispatchRenderFormItem = (item: IDynamicFormConfigItem, itemProps: Record<string, any> = {}): JSX.Element | null => {\n        switch (item.type) {\n            case 'input':\n                return renderInput(item, itemProps)\n            case 'match-input':\n                return renderInput(item, itemProps)\n            // return renderMatchInput(item, itemProps)\n            case 'input-select':\n                return renderInputSelect(item, itemProps)\n            case 'textArea':\n                return renderTextArea(item, itemProps)\n            case 'select':\n                return renderSelect(item, itemProps)\n            case 'datePicker':\n                return renderDatePicker(item, itemProps)\n            case 'rangePicker':\n                return renderRangePicker(item, itemProps)\n            case 'radio':\n                return renderRadio(item, itemProps)\n            default:\n                return null\n        }\n    }\n\n    const renderFormItem = (config: IDynamicFormConfigItem[]): Array<any | null> => {\n        return (config || []).map(item => {\n            if (item.list && item.list.length) {\n                const formList = <Form.List key={`dynamicForm_${item.name}`} name={item.name}>\n                    {(fields, { add, remove }) => (\n                        <>\n                            {fields.map(({ key, name, ...restField }) => (\n                                <div key={key} className=\"bor b-side pt32 plr16 mb16\">\n                                    {\n                                        item.list && item.list.map(listItem => {\n                                            return dispatchRenderFormItem(listItem, {\n                                                ...restField,\n                                                name: [name, listItem.name]\n                                            })\n                                        })\n                                    }\n                                    {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\n                                    <Form.Item wrapperCol={{ offset: 5 }}>\n                                        <Button danger onClick={() => remove(name)} block icon={<MinusCircleOutlined />}>\n                                            删除该项\n                                        </Button>\n                                    </Form.Item>\n                                </div>\n                            ))}\n                            <Form.Item noStyle className=\"w100\">\n                                <Button type=\"dashed\" className=\"w100\" onClick={() => add()} block icon={<PlusOutlined />}>\n                                    增加一项\n                                </Button>\n                            </Form.Item>\n                        </>\n                    )}\n                </Form.List>\n                return formList\n            } else {\n                return dispatchRenderFormItem(item)\n            }\n        })\n    }\n\n    return (\n        <>\n            <Form.Item\n                key={`dynamicForm_id`}\n                name={props.primaryKey || 'id'}\n                noStyle\n                hidden\n            >\n                <Input />\n            </Form.Item>\n            {/* {\n                props.configGroup && props.configGroup.length ?\n                    (props.configGroup || []).map(item => {\n                        return <div className=\"pb16\">\n                            <Row className=\"strong fs16 mb16 bg-module\"><Col ><span className=\"d-il pl4 bor-l b-theme ptb4\">{item.group}</span></Col></Row>\n                            {renderFormItem(item.config)}\n                        </div>\n                    }) : renderFormItem(props.config || [])\n            } */}\n            {\n                currentConfigGroup && currentConfigGroup.length ? <>\n                    <Steps current={current}>\n                        {\n                            (currentConfigGroup || []).map((item, index) => {\n                                return <Steps.Step key={index} title={item.group} />\n                            })\n                        }\n                    </Steps>\n                    <div className=\"pt32\">\n                        {\n                            (currentConfigGroup || []).map((item, index) => {\n                                return <div key={index} className={[current === index ? 'p-r z9' : 'p-a z-99 v-h l-10000'].join(' ')}>\n                                    {renderFormItem(item.config)}\n                                </div>\n                            })\n                        }\n                    </div>\n                    <div className=\"ta-c pt32\">\n                        {current > 0 && (\n                            <Button onClick={() => prev()}>\n                                上一步\n                            </Button>\n                        )}\n                        {current < (currentConfigGroup || []).length - 1 && (\n                            <Button type=\"primary\" className=\"ml16\" onClick={() => {\n                                if (props.form) {\n                                    const currentConfigGroupNameList = currentConfigGroup[current].config.map(item => item.name)\n                                    props.form.validateFields(currentConfigGroupNameList).then(() => {\n                                        next()\n                                    }).catch(err => {\n                                        console.log(err)\n                                    })\n                                } else {\n                                    next()\n                                }\n                            }}>\n                                下一步\n                            </Button>\n                        )}\n                        <div>\n                            {current === (currentConfigGroup || []).length - 1 && (\n                                <div className=\"pt8 c-hint-b\">点击确定完成提交</div>\n                            )}\n                        </div>\n                    </div>\n                </> : renderFormItem(currentConfig || [])\n            }\n\n            {/* {\n                props.configGroup && props.configGroup.length ?\n                    <Collapse defaultActiveKey={(props.configGroup || []).map((item, idx) => idx)} ghost expandIconPosition='right'>\n                        {\n                            (props.configGroup || []).map((item, index) => {\n                                return <Collapse.Panel key={index} header={<span className=\"strong fs16 pl8 bor-l b-theme\">{item.group}</span>}>\n                                    <div className=\"pb16\">\n                                        {renderFormItem(item.config)}\n                                    </div>\n                                </Collapse.Panel>\n                            })\n                        }\n                    </Collapse> : renderFormItem(props.config || [])\n            } */}\n\n        </>\n    )\n}\n","import React, { ReactText, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Input, DatePicker, TablePaginationConfig, Row, message, Space, Menu, Dropdown, Modal, Spin, Form, Tag, Popover, Tooltip, Select, FormInstance, Upload, UploadProps, Drawer, notification, Pagination } from 'antd';\nimport { Content } from 'antd/lib/layout/layout';\nimport TitleHeader from '../components/TitleHeader/TitleHeader';\nimport TableBox from '../components/TableBox/TableBox';\nimport moment from \"moment\";\nimport { CopyOutlined, DownOutlined, ExclamationCircleOutlined, ExportOutlined, PlusOutlined, QuestionCircleOutlined, RollbackOutlined, UploadOutlined } from '@ant-design/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getParam, getTableScroll } from '../util';\nimport ModalForm from '../components/ModalForm/ModalForm';\nimport cookies from 'js-cookie';\nimport { IADUGTemplateActionItem, IAppMenuItem } from '../api/interface/kubeflowInterface';\nimport { getADUGTemplateList, getADUGTemplateApiInfo, actionADUGTemplateDelete, getADUGTemplateDetail, actionADUGTemplateAdd, actionADUGTemplateUpdate, actionADUGTemplateSingle, actionADUGTemplateMuliple, getCustomDialog, actionADUGTemplateDownData, actionADUGTemplateRetryInfo } from '../api/kubeflowApi';\nimport { ColumnsType } from 'antd/lib/table';\nimport MixSearch, { IMixSearchParamItem } from '../components/MixSearch/MixSearch';\nimport DynamicForm, { calculateId, IDynamicFormConfigItem, IDynamicFormGroupConfigItem, ILinkageConfig, TDynamicFormType } from '../components/DynamicForm/DynamicForm';\nimport { columnConfig } from './columnConfig';\n\ninterface fatchDataParams {\n    pageConf: TablePaginationConfig\n    params: any[]\n    paramsMap: Record<string, any>\n    sorter?: ISorterParam\n}\n\ninterface ISorterParam {\n    order_column: string\n    order_direction: 'desc' | 'asc'\n}\n\nexport default function TaskListManager(props?: IAppMenuItem) {\n    const PAGE_SIZE = 20;\n    const navigate = useNavigate();\n    const location = useLocation()\n    const [dataList, setDataList] = useState<any[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [loadingAdd, setLoadingAdd] = useState(false)\n    const [visableAdd, setVisableAdd] = useState((getParam('isVisableAdd') === 'true') || false)\n    const [loadingUpdate, setLoadingUpdate] = useState(false)\n    const [visableUpdate, setVisableUpdate] = useState(false)\n    const [loadingDetail, setLoadingDetail] = useState(false)\n    const [visableDetail, setVisableDetail] = useState(false)\n    const [selectedRowKeys, setSelectedRowKeys] = useState<ReactText[]>([])\n    const [dateInfo, setDateInfo] = useState<{\n        startTime: string,\n        endTime: string\n    }>({\n        startTime: moment().subtract(1, 'd').startOf('day').format('YYYY-MM-DD HH:mm:ss'),\n        endTime: moment().subtract(1, 'd').endOf('day').format('YYYY-MM-DD HH:mm:ss')\n    })\n    const pageInfoInit: TablePaginationConfig = {\n        current: 1,\n        pageSize: PAGE_SIZE,\n        total: 0,\n        showSizeChanger: true,\n        showQuickJumper: true,\n        pageSizeOptions: [20, 50, 100, 500],\n        showTotal: (total) => `共${total}条`,\n    };\n    const [pageInfo, setPageInfo] = useState<TablePaginationConfig>(pageInfoInit);\n    const [currentColumns, setCurrentColumns] = useState<ColumnsType<any>>([])\n    // const customFilter: IMixSearchParamItem[] = [\n    //     { name: 'test1', type: 'input' },\n    //     { name: 'test2', type: 'select', option: [{ label: 'title1', value: 'value1' }, { label: 'title2', value: 'value2' }] },\n    //     { name: 'test3', type: 'input' },\n    //     { name: 'test4', type: 'select' },\n    // ]\n    const [filterParams, setFilterParams] = useState<IMixSearchParamItem[]>([])\n    const [filterValues, _setFilterValues] = useState<Array<{ key: ReactText | undefined, value: ReactText | undefined }>>([])\n    const filterValuesRef = useRef(filterValues);\n    const setFilterValues = (data: Array<{ key: ReactText | undefined, value: ReactText | undefined }>): void => {\n        filterValuesRef.current = data;\n        _setFilterValues(data);\n    };\n    const [dynamicFormConfigAdd, setDynamicFormConfigAdd] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormConfigUpdate, setDynamicFormConfigUpdate] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormGroupConfigAdd, setDynamicFormGroupConfigAdd] = useState<IDynamicFormGroupConfigItem[]>([])\n    const [dynamicFormGroupConfigUpdate, setDynamicFormGroupConfigUpdate] = useState<IDynamicFormGroupConfigItem[]>([])\n\n    let customFormData: Record<string, string> = {}\n    try {\n        customFormData = JSON.parse(getParam('formData') || \"{}\")\n    } catch (err) { }\n    const [dynamicFormDataAdd, setDynamicFormDataAdd] = useState(customFormData)\n    const [updateColumnsMap, setUpdateColumnsMap] = useState<Record<string, any>>({})\n    const [labelMap, _setLabelMap] = useState<Record<string, string>>({})\n    const labelMapRef = useRef(labelMap);\n    const setLabelMap = (data: Record<string, string>): void => {\n        labelMapRef.current = data;\n        _setLabelMap(data);\n    };\n    const [dataDetail, setDataDetail] = useState<Array<{ label: string, value: any, key: string }>>([])\n    const [tableWidth, setTableWidth] = useState(1000)\n    const [permissions, setPermissions] = useState<string[]>([])\n    // const [tips, setTips] = useState<Array<{ label: string, value: any }>>([])\n    const [filterParamsMap, setFilterParamsMap] = useState<Record<string, any>>({})\n    const [helpUrl, setHelpUrl] = useState<string | null>()\n\n    const [baseUrl, _setBaseUrl] = useState<string>()\n    const baseUrlRef = useRef(baseUrl);\n    const setBaseUrl = (data: string): void => {\n        baseUrlRef.current = data;\n        _setBaseUrl(data);\n    };\n    const [isImportData, setIsImportData] = useState(false)\n    const [isDownLoadData, setIsDownLoadData] = useState(false)\n    const [columnRelateFormat, setColumnRelateFormat] = useState<ILinkageConfig[]>([])\n    const [multipleAction, setMultipleAction] = useState<IADUGTemplateActionItem[]>([])\n    const [sorterParam, setSorterParam] = useState<{\n        order_column: string\n        order_direction: 'desc' | 'asc'\n    }>()\n    const [primaryKey, setPrimaryKey] = useState('')\n    const [labelTitle, setLabelTitle] = useState('')\n    const [list_ui_type, setList_ui_type] = useState<'card' | 'table'>()\n    const [list_ui_args, setList_ui_args] = useState<{\n        card_width: string\n        card_height: string\n    }>()\n    const [isTqAuth, setIsTqAuth] = useState(false)\n    const [listColumns, setListColumns] = useState<string[]>([])\n\n    const [scrollY, setScrollY] = useState(\"\")\n\n    const fetchDataParams = {\n        pageConf: pageInfoInit,\n        params: [],\n        paramsMap: filterParamsMap,\n        sorter: undefined\n    }\n\n    useEffect(() => {\n        setScrollY(getTableScroll())\n    }, [])\n\n    useEffect(() => {\n        if (props && props.disable) {\n            navigate('/404')\n        }\n    }, [])\n\n    // 表单字段处理\n    const createDyFormConfig = (data: Record<string, any>[], label_columns: Record<string, any>, description_columns: Record<string, any>): IDynamicFormConfigItem[] => {\n        return data.map((item, index) => {\n            let type = item['ui-type'] || 'input'\n            if (type === 'select2') {\n                type = 'select'\n            }\n            const label = item.label || label_columns[item.name]\n\n            // 校验规则\n            const rules = (item.validators || []).map((item: any) => {\n                if (type === 'select') {\n                    return item.type === 'DataRequired' ? { required: true, message: `请选择${label}` } : undefined\n                }\n\n                switch (item.type) {\n                    case 'DataRequired':\n                        return { required: true, message: `请输入${label}` }\n                    case 'Regexp':\n                        return { pattern: new RegExp(`${item.regex}`), message: `请按正确的规则输入` }\n                    case 'Length':\n                        return { min: item.min || 0, max: item.max, message: `请输入正确的长度` }\n                    default:\n                        return undefined\n                }\n            }).filter((item: any) => !!item)\n\n            const list = createDyFormConfig((item.info || []), label_columns, description_columns)\n\n            const res: IDynamicFormConfigItem = {\n                label,\n                type,\n                rules,\n                list,\n                name: item.name,\n                disable: item.disable,\n                description: item.description || description_columns[item.name] || undefined,\n                required: item.required,\n                defaultValue: item.default === '' ? undefined : item.default,\n                multiple: item['ui-type'] && item['ui-type'] === 'select2',\n                options: (item.values || []).map((item: any) => ({ label: item.value, value: item.id })),\n                data: { ...item }\n            }\n            return res\n        })\n    }\n\n    useEffect(() => {\n        const targetId = getParam('targetId')\n        const url = targetId ? `/dimension_remote_table_modelview/${targetId}/api/` : props?.url\n        setLoadingAdd(true)\n\n        getADUGTemplateApiInfo(url).then(res => {\n            const {\n                list_columns,\n                label_columns,\n                filters,\n                add_columns,\n                edit_columns,\n                permissions,\n                description_columns,\n                add_fieldsets,\n                edit_fieldsets,\n                help_url,\n                order_columns,\n                action,\n                route_base,\n                column_related,\n                primary_key,\n                label_title,\n                cols_width,\n                import_data,\n                download_data,\n                list_ui_type,\n                list_ui_args,\n            } = res.data\n            const actionwidth = 80 || [props?.related, permissions.includes('can_show'), permissions.includes('can_edit'), permissions.includes('can_delete')].filter(item => !!item).length * 60\n            const hasAction = props?.related || permissions.includes('can_show') || permissions.includes('can_edit') || permissions.includes('can_delete')\n            const cacheColumns = localStorage.getItem(`tablebox_${location.pathname}`)\n            const cacheColumnsWidthMap = (JSON.parse(cacheColumns || '[]')).reduce((pre: any, next: any) => ({ ...pre, [next.dataIndex]: next.width }), {});\n\n            const columnRelatedFormat: ILinkageConfig[] = Object.entries(column_related || {})\n                .reduce((pre: any[], [key, value]) => ([...pre, {\n                    dep: value.src_columns,\n                    effect: value.des_columns.join(''),\n                    effectOption: value.related.reduce((ePre: any, eNext) => ({ ...ePre, [calculateId(eNext.src_value)]: eNext.des_value.map(item => ({ label: item, value: item })) }), {})\n                }]), [])\n\n            // 表格字段处理\n            const listColumns = list_columns.map(column => {\n                return {\n                    title: label_columns[column] || column,\n                    dataIndex: column,\n                    key: column,\n                    sorter: order_columns.includes(column) ? (a: any, b: any) => a[column] - b[column] : undefined,\n                    render: (text: any, record: any) => {\n                        if (text === undefined || text === '') {\n                            return '-'\n                        }\n                        if (cols_width[column] && cols_width[column].type?.indexOf('ellip') !== -1) {\n                            return <Tooltip title={<span className=\"tips-content\" dangerouslySetInnerHTML={{ __html: text }}></span>} placement=\"topLeft\">\n                                <div className={cols_width[column].type} dangerouslySetInnerHTML={{ __html: text }}>\n                                </div>\n                            </Tooltip>\n                        }\n                        if (Object.prototype.toString.call(text) === '[object Object]') {\n                            const tarRes = Object.entries(text).reduce((pre: any, [label, value]) => [...pre, { label, value }], [])\n                            if (!tarRes.length) {\n                                return '-'\n                            }\n                            return <div style={{ overflow: 'auto', maxHeight: 100 }}>\n                                {\n                                    tarRes.map((item: any, index: number) => {\n                                        return <div key={`table_itemvalue_${index}`}>{label_columns[item.label] || item.label}:{item.value}</div>\n                                    })\n                                }\n                            </div>\n                        }\n                        return <div style={{ overflow: 'auto', maxHeight: 100 }} dangerouslySetInnerHTML={{ __html: text }}></div>\n                    },\n                    width: cacheColumnsWidthMap[column] || (cols_width[column] && cols_width[column].width) || 100\n                }\n            })\n\n            const actionList = Object.entries(action || {}).reduce((pre: any, [name, value]) => ([...pre, { ...value }]), [])\n            const multipleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.multiple)\n            const singleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.single)\n\n            const tableAction: any = {\n                title: '操作',\n                width: actionwidth,\n                dataIndex: 'handle',\n                key: 'handle',\n                align: 'right',\n                fixed: 'right',\n                render: (text: any, record: any) => {\n                    return (\n                        <Space size=\"middle\">\n                            {\n                                hasAction ? <Dropdown overlay={<Menu>\n                                    {\n                                        permissions.includes('can_show') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableDetail(true)\n                                            fetchDataDetail(record[primary_key])\n                                        }}>\n                                            详情\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_edit') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableUpdate(true)\n                                            getADUGTemplateApiInfo(route_base, record[primary_key]).then(res => {\n                                                const { edit_columns, label_columns, description_columns } = res.data\n                                                const formConfigUpdate: IDynamicFormConfigItem[] = createDyFormConfig(edit_columns, label_columns, description_columns)\n                                                const formGroupConfigUpdate: IDynamicFormGroupConfigItem[] = edit_fieldsets.map(group => {\n                                                    const currentData = group.fields.map(field => updateColumnsMap[field]).filter(item => !!item)\n                                                    return {\n                                                        group: group.group,\n                                                        expanded: group.expanded,\n                                                        config: createDyFormConfig(currentData, label_columns, description_columns)\n                                                    }\n                                                })\n\n                                                setDynamicFormConfigUpdate(formConfigUpdate)\n                                                setDynamicFormGroupConfigUpdate(formGroupConfigUpdate)\n\n                                                fetchDataDetail(record[primary_key])\n                                            }).catch(() => {\n                                                message.warn('用户没有修改权限')\n                                            })\n                                        }}>\n                                            修改\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_delete') ? <Menu.Item><div className=\"c-fail cp\" onClick={() => {\n                                            Modal.confirm({\n                                                title: '删除',\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: '确定删除?',\n                                                okText: '确认删除',\n                                                cancelText: '取消',\n                                                okButtonProps: { danger: true },\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateDelete(`${route_base}${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success('删除成功');\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error('删除失败');\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>\n                                            删除\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        props?.related?.map((item, index) => {\n                                            return <Menu.Item key={`moreAction_${index}`}>\n                                                <div className=\"link\" onClick={() => {\n                                                    navigate(`${location.pathname}/${item.name}?id=${record[primary_key]}`)\n                                                }}>\n                                                    {item.title}\n                                                </div>\n                                            </Menu.Item>\n                                        })\n                                    }\n                                    {\n                                        !!singleAction.length && singleAction.map((action, index) => {\n                                            return <Menu.Item key={`table_action_${index}`}><div className=\"link\" onClick={() => {\n                                                Modal.confirm({\n                                                    title: action.confirmation,\n                                                    icon: <ExclamationCircleOutlined />,\n                                                    content: '',\n                                                    okText: `确认${action.confirmation}`,\n                                                    cancelText: '取消',\n                                                    onOk() {\n                                                        return new Promise((resolve, reject) => {\n                                                            actionADUGTemplateSingle(`${route_base}action/${action.name}/${record[primary_key]}`)\n                                                                .then((res) => {\n                                                                    resolve(res);\n                                                                })\n                                                                .catch((err) => {\n                                                                    reject(err);\n                                                                });\n                                                        })\n                                                            .then((res: any) => {\n                                                                message.success('操作成功');\n\n                                                                if (res.data.result.link) {\n                                                                    window.open(res.data.result.link, 'bank')\n                                                                }\n                                                                fetchData({\n                                                                    ...fetchDataParams,\n                                                                    pageConf: pageInfo,\n                                                                    params: filterValuesRef.current,\n                                                                    paramsMap: filters\n                                                                });\n                                                            })\n                                                            .catch(() => {\n                                                                message.error('操作失败');\n                                                            });\n                                                    },\n                                                    onCancel() { },\n                                                });\n                                            }}>\n                                                {action.text}\n                                            </div></Menu.Item>\n                                        })\n                                    }\n                                </Menu>}>\n                                    <div className=\"link\">更多<DownOutlined /></div>\n                                </Dropdown> : null\n                            }\n                        </Space>\n                    );\n                },\n            }\n            const tarColumns: React.SetStateAction<ColumnsType<any>> = [...listColumns]\n            if (hasAction) {\n                tarColumns.push(tableAction)\n            }\n\n            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            // 联动字段处理\n            if (customFormData && Object.keys(customFormData).length) {\n                const reTryInfoQuene = (Object.keys(customFormData) || []).filter(key => customFormData[key] && addColumnsMap[key] && addColumnsMap[key].retry_info)\n                let reTryInfoFlag = reTryInfoQuene.length\n\n                const handleReTryInfo = (tar: string) => {\n                    reTryInfoFlag = reTryInfoFlag - 1;\n\n                    actionADUGTemplateRetryInfo(`${route_base}_info`, { exist_add_args: tar }).then(res => {\n                        const { add_columns, label_columns, description_columns, add_fieldsets } = res.data;\n                        const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n                        const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n                        const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                            const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                            return {\n                                group: group.group,\n                                expanded: group.expanded,\n                                config: createDyFormConfig(currentData, label_columns, description_columns)\n                            }\n                        })\n                        const formReset = add_columns.filter((item) => item.default !== '').map(column => ({ [column.name]: column.default })).reduce((pre, next) => ({ ...pre, ...next }), {})\n\n                        setDynamicFormDataAdd(formReset)\n                        setDynamicFormConfigAdd(formConfigAdd)\n                        setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n\n                        if (reTryInfoFlag) {\n                            const resTar = JSON.stringify(formReset)\n                            handleReTryInfo(resTar)\n                        }\n                    }).catch(err => {\n                        message.error('字段切换错误')\n                    }).finally(() => {\n                        setLoadingAdd(false)\n                    })\n                }\n\n                if (reTryInfoQuene.length) {\n                    const formRes = customFormData\n                    for (const key in formRes) {\n                        if (Object.prototype.hasOwnProperty.call(formRes, key)) {\n                            const value = formRes[key];\n                            if (value === undefined) {\n                                delete formRes[key]\n                            }\n                        }\n                    }\n                    const tar = JSON.stringify(formRes)\n\n                    handleReTryInfo(tar)\n                }\n            }\n\n            const updateColumnsMap = edit_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            edit_columns.forEach((item) => {\n                if (item['ui-type'] === 'list') {\n                    item.info.forEach((itemInfo: any) => {\n                        updateColumnsMap[itemInfo.name] = itemInfo\n                    })\n                }\n            })\n            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                return {\n                    group: group.group,\n                    expanded: group.expanded,\n                    config: createDyFormConfig(currentData, label_columns, description_columns)\n                }\n            })\n\n            const tarFilter: IMixSearchParamItem[] = Object.entries(filters)\n                .reduce((pre: any, [name, value]) => {\n                    return [...pre, {\n                        name,\n                        type: value['ui-type'] || 'input',\n                        title: label_columns[name],\n                        oprList: value.filter.map(item => item.operator),\n                        defalutValue: value.default === '' ? undefined : value.default,\n                        option: value.values ? value.values.map(item => ({ label: item.value, value: item.id })) : undefined\n                    }]\n                }, [])\n\n            let currentFilterValues = Object.entries(filters)\n                .reduce((pre: any, [key, value]) => {\n                    return [...pre, {\n                        key,\n                        value: value.default\n                    }]\n                }, []).filter((item: any) => item.value)\n\n            const localCacheFilter = JSON.parse(localStorage.getItem(`filter_${location.pathname}${location.search}`) || '[]')\n            let urlFilter = undefined\n            if (getParam('filter')) {\n                try {\n                    urlFilter = JSON.parse(getParam('filter') || '[]')\n                } catch (error) {\n                    message.error('filter解析异常')\n                }\n            }\n            const localFilter = urlFilter || localCacheFilter\n            if (localFilter && localFilter.length) {\n                currentFilterValues = localFilter\n            }\n\n            setListColumns(list_columns)\n            setList_ui_type(list_ui_type)\n            setList_ui_args(list_ui_args)\n            setIsDownLoadData(download_data)\n            setIsImportData(import_data)\n            setLabelTitle(label_title)\n            setPrimaryKey(primary_key)\n            setColumnRelateFormat(columnRelatedFormat)\n            setMultipleAction(multipleAction)\n            setBaseUrl(route_base)\n            setUpdateColumnsMap(updateColumnsMap)\n            setFilterParamsMap(filters)\n            setCurrentColumns(tarColumns)\n            setFilterParams(tarFilter)\n            setDynamicFormConfigAdd(formConfigAdd)\n            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n\n            setLabelMap(label_columns)\n            setPermissions(permissions)\n            const currentTableWidth = cacheColumns ? tarColumns.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 80 : tarColumns.length * 100 + 80 + actionwidth\n            setTableWidth(currentTableWidth)\n            setHelpUrl(help_url)\n            setFilterValues(currentFilterValues)\n            fetchData({\n                pageConf: pageInfoInit,\n                params: currentFilterValues,\n                paramsMap: filters,\n                sorter: undefined\n            });\n\n        }).catch(err => {\n            console.log(err);\n        }).finally(() => {\n            setLoading(false)\n            setLoadingAdd(false)\n        })\n    }, []);\n\n    const fetchData = ({\n        pageConf,\n        params,\n        paramsMap,\n        sorter\n    }: fatchDataParams = {\n            pageConf: pageInfoInit,\n            params: filterValues,\n            paramsMap: filterParamsMap,\n            sorter: undefined\n        }) => {\n        setLoading(true);\n        let form_data = undefined\n        const temlateId = getParam('id')\n\n        form_data = JSON.stringify({\n            str_related: 1,\n            \"filters\": [\n                temlateId ? {\n                    \"col\": props?.model_name,\n                    \"opr\": \"rel_o_m\",\n                    \"value\": +temlateId\n                } : undefined,\n                ...params.filter(param => param.value !== undefined).map((param: any) => {\n                    let opr = ''\n                    const oprList = ['rel_o_m', 'ct', 'eq']\n                    const sourceOprList: string[] = paramsMap[param.key].filter.map((item: any) => item.operator) || []\n\n                    for (let i = 0; i < oprList.length; i++) {\n                        const currentOpr = oprList[i];\n                        if (sourceOprList.includes(currentOpr)) {\n                            opr = currentOpr\n                            break\n                        }\n                    }\n                    // if (!isNaN(+param.value) && paramsMap[param.key] && !(paramsMap[param.key].type === 'Related' || paramsMap[param.key].type === 'QuerySelect')) {\n                    //     opr = 'eq'\n                    // } else {\n                    //     const oprList = ['rel_o_m', 'ct', 'eq']\n                    //     const sourceOprList: string[] = paramsMap[param.key].filter.map((item: any) => item.operator) || []\n\n                    //     for (let i = 0; i < oprList.length; i++) {\n                    //         const currentOpr = oprList[i];\n                    //         if (sourceOprList.includes(currentOpr)) {\n                    //             opr = currentOpr\n                    //             break\n                    //         }\n                    //     }\n                    // }\n\n                    return {\n                        \"col\": param.key,\n                        \"opr\": opr,\n                        \"value\": param.value\n                    }\n                })\n            ].filter(item => !!item),\n            page: (pageConf.current || 1) - 1,\n            page_size: pageConf.pageSize || 10,\n            ...sorter\n        })\n\n        getADUGTemplateList(baseUrlRef.current, {\n            form_data,\n        })\n            .then((res) => {\n                const { count, data } = res.data.result\n                setDataList(data);\n                setSelectedRowKeys([])\n                setPageInfo({ ...pageInfoInit, ...pageConf, total: count });\n                setSorterParam(sorter)\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            .finally(() => setLoading(false));\n    };\n\n    const fetchDataDetail = (id: string) => {\n        setLoadingDetail(true)\n        setDataDetail([])\n        getADUGTemplateDetail(`${baseUrlRef.current}${id}`)\n            .then(res => {\n                const data = res.data.result\n                const detail: any[] = []\n                const formatValue = (data: any) => {\n                    if (Object.prototype.toString.call(data) === '[object Object]') {\n                        return data.last_name\n                    }\n                    return data\n                }\n                Object.keys(data).forEach(key => {\n                    detail.push({\n                        label: labelMapRef.current[key] || key,\n                        value: formatValue(data[key]),\n                        key\n                    })\n                })\n                setDataDetail(detail)\n            })\n            .catch(err => { })\n            .finally(() => { setLoadingDetail(false) })\n    }\n\n    const handleMultiRecord = (action: IADUGTemplateActionItem) => {\n        if (selectedRowKeys.length) {\n            Modal.confirm({\n                title: action.confirmation,\n                icon: <ExclamationCircleOutlined />,\n                content: '',\n                okText: `确认${action.confirmation}`,\n                cancelText: '取消',\n                onOk() {\n                    return new Promise((resolve, reject) => {\n                        actionADUGTemplateMuliple(`${baseUrlRef.current}multi_action/${action.name}`, {\n                            ids: selectedRowKeys.map((item: any) => JSON.parse(item || '{}')[primaryKey])\n                        })\n                            .then((res) => {\n                                resolve('');\n                            })\n                            .catch((err) => {\n                                reject();\n                            });\n                    })\n                        .then((res) => {\n                            message.success('操作成功');\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(() => {\n                            message.error('操作失败');\n                        });\n                },\n                onCancel() { },\n            });\n        } else {\n            message.warn('请先选择')\n        }\n    }\n\n    const uploadConfig: UploadProps = {\n        name: 'csv_file',\n        maxCount: 1,\n        action: `${baseUrl}upload/`,\n        headers: {\n            authorization: 'authorization-text',\n        },\n        beforeUpload: file => {\n            const isCSV = file.name.indexOf('.csv') !== -1;\n            if (!isCSV) {\n                message.error(`${file.name} 并不是csv文件`);\n            }\n            return isCSV || Upload.LIST_IGNORE;\n        },\n        onChange(info) {\n            // if (info.file.status !== 'uploading') {\n            //     console.log(info.file, info.fileList);\n            // }\n            if (info.file.status === 'done') {\n                // message.success(`${info.file.name}，${info.file.response.message}`);\n                notification['success']({\n                    message: '导入成功',\n                    description: JSON.stringify(info.file.response),\n                });\n            } else if (info.file.status === 'error') {\n                // message.error(`${info.file.name} 数据导入失败`);\n                notification['error']({\n                    message: '导入失败',\n                    description: JSON.stringify(info.file.response),\n                });\n            }\n        },\n    };\n\n    return (\n        <div className=\"fade-in\">\n            {/* 添加 */}\n            <ModalForm\n                title={`添加${labelTitle}`}\n                width={1500}\n                formData={dynamicFormDataAdd}\n                loading={loadingAdd}\n                visible={visableAdd}\n                onCancel={() => { setVisableAdd(false) }}\n                onCreate={(values, form) => {\n                    setLoadingAdd(true)\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateAdd(baseUrlRef.current, values).then((res: any) => {\n                        message.success(`添加${labelTitle}成功`)\n                        form.resetFields()\n                        setVisableAdd(false)\n                        fetchData({\n                            ...fetchDataParams,\n                            pageConf: pageInfo,\n                            params: filterValues,\n                            sorter: sorterParam,\n                            paramsMap: filterParamsMap\n                        });\n                    }).catch(err => {\n                        message.error(`添加${labelTitle}失败`)\n                    }).finally(() => {\n                        setLoadingAdd(false)\n                    })\n                }}\n            >\n                {\n                    (form: FormInstance, formChangeRes: any) => <DynamicForm form={form} onRetryInfoChange={(value) => {\n                        setLoadingAdd(true)\n\n                        const formRes = form.getFieldsValue()\n                        for (const key in formRes) {\n                            if (Object.prototype.hasOwnProperty.call(formRes, key)) {\n                                const value = formRes[key];\n                                if (value === undefined) {\n                                    delete formRes[key]\n                                }\n                            }\n                        }\n                        const tar = JSON.stringify(formRes)\n                        form.resetFields()\n\n                        actionADUGTemplateRetryInfo(`${baseUrlRef.current}_info`, { exist_add_args: tar }).then(res => {\n                            const { add_columns, label_columns, description_columns, add_fieldsets } = res.data;\n                            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n                            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n                            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                                return {\n                                    group: group.group,\n                                    expanded: group.expanded,\n                                    config: createDyFormConfig(currentData, label_columns, description_columns)\n                                }\n                            })\n                            const formReset = add_columns.filter((item) => item.default !== '').map(column => ({ [column.name]: column.default })).reduce((pre, next) => ({ ...pre, ...next }), {})\n\n                            form.setFieldsValue(formReset)\n                            setDynamicFormConfigAdd(formConfigAdd)\n                            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n                        }).catch(err => {\n                            message.error('字段切换错误')\n                        }).finally(() => {\n                            setLoadingAdd(false)\n                        })\n\n                    }} formChangeRes={formChangeRes} linkageConfig={columnRelateFormat} config={dynamicFormConfigAdd} configGroup={dynamicFormGroupConfigAdd} />\n                }\n            </ModalForm>\n            {/* 修改 */}\n            <ModalForm\n                title={`修改${labelTitle}`}\n                width={1500}\n                formData={dataDetail.reduce((pre, next) => {\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select') {\n                        let value = next.value\n                        const options = (updateColumnsMap[next.key] || {}).values || []\n                        const tarIndex = options.map((item: any) => item.value).indexOf(next.value)\n                        if (~tarIndex) {\n                            value = options[tarIndex].id\n                        }\n                        return { ...pre, [next.key]: value }\n                    }\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select2') {\n                        return { ...pre, [next.key]: (next.value || '').split(',') }\n                    }\n\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'datePicker') {\n                        let value = next.value;\n                        value = moment(value)\n                        return { ...pre, [next.key]: value }\n                    }\n\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'list') {\n                        const value = (next.value || []).map((item: any) => {\n                            for (const listItemKey in item) {\n                                if (Object.prototype.hasOwnProperty.call(item, listItemKey)) {\n                                    const listItemValue = item[listItemKey];\n                                    if ((updateColumnsMap[listItemKey] || {})['ui-type'] === 'datePicker') {\n                                        item[listItemKey] = moment(listItemValue)\n                                    }\n                                }\n                            }\n                            return item\n                        })\n                        return { ...pre, [next.key]: value }\n                    }\n\n                    return { ...pre, [next.key]: next.value }\n                }, {})}\n                loading={loadingUpdate || loadingDetail}\n                visible={visableUpdate}\n                onCancel={() => { setVisableUpdate(false) }}\n                onCreate={(values) => {\n                    setLoadingUpdate(true)\n                    setDataDetail([])\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateUpdate(`${baseUrlRef.current}${values[primaryKey]}`, values)\n                        .then(res => {\n                            message.success(`更新${labelTitle}成功`)\n                            setVisableUpdate(false)\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(err => {\n                            message.error(`更新${labelTitle}失败`)\n                        })\n                        .finally(() => { setLoadingUpdate(false) })\n                }}\n            >\n                {\n                    (form: FormInstance) => <DynamicForm form={form} primaryKey={primaryKey} config={dynamicFormConfigUpdate} linkageConfig={columnRelateFormat} configGroup={dynamicFormGroupConfigUpdate} />\n                }\n            </ModalForm>\n            {/* 详情 */}\n            <Modal\n                title={`${labelTitle}详情`}\n                visible={visableDetail}\n                footer={null}\n                width={800}\n                destroyOnClose\n                onCancel={() => { setVisableDetail(false) }}>\n                <Spin spinning={loadingDetail}>\n                    <div className=\"pb32\" style={{ minHeight: 300 }}>\n                        {\n                            dataDetail.map((item, index) => {\n                                return <Row className=\"mb16\" key={`dataDetail_${index}`}>\n                                    <Col span={6}><div className=\"ta-r\"><strong>{item.label}：</strong></div></Col>\n                                    <Col span={18}><pre style={{ whiteSpace: 'break-spaces' }} dangerouslySetInnerHTML={{\n                                        __html: (() => {\n                                            let content = item.value\n                                            if (Object.prototype.toString.call(item.value) === '[object Object]' || Object.prototype.toString.call(item.value) === '[object Array]') {\n                                                try {\n                                                    content = JSON.stringify(item.value)\n                                                } catch (error) { }\n                                            }\n                                            return content\n                                        })()\n                                    }}></pre></Col>\n                                </Row>\n                            })\n                        }\n                    </div>\n                </Spin>\n            </Modal>\n            <TitleHeader title={<>\n                {\n                    (props?.isSubRoute || getParam('targetId')) ? <Button className=\"mr16\" onClick={() => {\n                        navigate('/data/metadata/metadata_dimension')\n                        window.location.reload()\n                    }}><RollbackOutlined />返回</Button> : null\n                }\n                <span>{labelTitle}</span>\n            </>} breadcrumbs={(props?.breadcrumbs || []).map((crumbs, idx) => {\n                return <span key={`templateTitle_${props?.name}_${idx}`} className=\"c-hint-b fs12\">/<span className=\"plr2\">{crumbs}</span></span>\n            })} >\n                {\n                    helpUrl ? <div className=\"link\"><span className=\"pr4\" onClick={() => {\n                        window.open(helpUrl, 'blank')\n                    }}>帮助链接</span><QuestionCircleOutlined /></div> : null\n                }\n            </TitleHeader>\n            <Content className=\"appmgmt-content bg-title\">\n                {/* <div>\n                    <img className=\"m32\" style={{ height: 42 }} src={require('../images/star2.svg').default} alt=\"\" />\n                </div> */}\n                {\n                    !!filterParams.length && <MixSearch values={filterValues} params={filterParams} onChange={(values) => {\n                        localStorage.setItem(`filter_${location.pathname}${location.search}`, JSON.stringify(values))\n                        setFilterValues(values)\n                        fetchData({\n                            ...fetchDataParams,\n                            pageConf: pageInfoInit,\n                            params: values,\n                            sorter: sorterParam,\n                            paramsMap: filterParamsMap\n                        });\n                    }} />\n                }\n                {/* {\n                    tips.length ? <div className=\"bg-module mlr24 p16\">\n                        {tips.map((item, index) => {\n                            return <div key={`ADUGTemplate_tips_${index}`}><span>{labelMapRef.current[item.label] || item.label}：</span><span>{item.value}</span></div>\n                        })}\n                    </div> : null\n                } */}\n                <div className=\"m16\">\n                    {\n                        list_ui_type !== 'card' ? <TableBox\n                            cancelExportData={true}\n                            tableKey={`tablebox_${location.pathname}`}\n                            titleNode={<Col className=\"tablebox-title\">{labelTitle}列表</Col>}\n                            buttonNode={<div className=\"d-f ac\">\n\n                                {\n                                    permissions.includes('can_add') ? <Button className=\"mr16\" type=\"primary\" onClick={() => setVisableAdd(true)}>添加{labelTitle}<PlusOutlined /></Button> : null\n                                }\n                                <div>\n                                    <Dropdown overlay={<Menu>\n                                        {\n                                            multipleAction.map((action, index) => {\n                                                return <Menu.Item key={`table_muliple_${index}`}>\n                                                    <span className=\"link\" onClick={() => handleMultiRecord(action)}>\n                                                        {`批量${action.text}`}\n                                                    </span>\n                                                </Menu.Item>\n                                            })\n                                        }\n\n                                    </Menu>}>\n                                        <Button>批量操作 <DownOutlined /></Button>\n                                    </Dropdown>\n                                </div>\n                                {\n                                    isImportData ? <div className=\"d-f ml16\">\n                                        <Tooltip color=\"#fff\" title={<span className=\"tips-content-b\">注意：csv逗号分隔，第一行为列的英文名 <span className=\"link\" onClick={() => {\n                                            window.open(`${window.location.origin}${baseUrlRef.current}download_template`)\n                                        }}>下载导入模板</span></span>} placement=\"topLeft\">\n                                            <Upload {...uploadConfig}>\n                                                <Button className=\"\" icon={<UploadOutlined />}>批量导入数据</Button>\n                                            </Upload>\n                                        </Tooltip>\n                                    </div> : null\n                                }\n                                {\n                                    isDownLoadData ? <Button className=\"ml16\" onClick={() => {\n                                        Modal.confirm({\n                                            title: '导出数据',\n                                            icon: <ExclamationCircleOutlined />,\n                                            content: '',\n                                            okText: '确认导出数据',\n                                            cancelText: '取消',\n                                            onOk() {\n                                                window.open(`${window.location.origin}${baseUrlRef.current}download`)\n                                                message.success('导出成功');\n                                            },\n                                            onCancel() { },\n                                        });\n                                    }}>批量导出  <ExportOutlined /></Button> : null\n                                }\n\n                            </div>}\n                            rowKey={(record: any) => {\n                                return JSON.stringify(record)\n                            }}\n                            columns={currentColumns}\n                            loading={loading}\n                            pagination={pageInfo}\n                            dataSource={dataList}\n                            onChange={(pageInfo: any, filters, sorter: any) => {\n                                const tarSorter = sorter.order ? {\n                                    order_column: sorter.columnKey,\n                                    order_direction: sorter.order === \"ascend\" ? 'asc' : 'desc'\n                                } as ISorterParam : undefined\n\n                                fetchData({\n                                    ...fetchDataParams,\n                                    pageConf: pageInfo,\n                                    params: filterValues,\n                                    paramsMap: filterParamsMap,\n                                    sorter: tarSorter\n                                });\n                                // setPageInfo(pageInfo)\n                            }}\n                            rowSelection={{\n                                type: 'checkbox',\n                                fixed: 'left',\n                                columnWidth: 80,\n                                selectedRowKeys,\n                                onChange: (selectedRowKeys) => {\n                                    setSelectedRowKeys(selectedRowKeys)\n                                }\n                            }}\n                            scroll={{ x: tableWidth, y: scrollY }}\n                        /> : <div className=\"bg-w p16\">\n                                <div className=\"d-f fw\">\n                                    {\n                                        dataList.map((row, rowIndex) => {\n                                            return <div style={{ overflowY: 'auto', width: list_ui_args?.card_width, height: list_ui_args?.card_height }} key={`card${rowIndex}`} className=\"card-row mr16 mb16\" >\n                                                {\n                                                    Object.keys(row).map((key, itemIndex) => {\n                                                        if (listColumns.includes(key)) {\n                                                            return <div style={{ wordBreak: 'break-all' }} key={`row${rowIndex}${itemIndex}`} dangerouslySetInnerHTML={{ __html: row[key] }}></div>\n                                                        }\n                                                        return null\n                                                    })\n                                                }\n                                            </div>\n                                        })\n                                    }\n                                </div>\n                                <div className=\"ta-r\">\n                                    <Pagination {...pageInfo} onChange={(page, pageSize) => {\n                                        fetchData({\n                                            ...fetchDataParams,\n                                            pageConf: {\n                                                ...pageInfo,\n                                                current: page,\n                                                pageSize\n                                            },\n                                            params: filterValues,\n                                            paramsMap: filterParamsMap,\n                                        });\n                                    }} />\n                                </div>\n                            </div>\n                    }\n\n                </div>\n            </Content>\n        </div >\n    );\n}\n\n"],"names":["InputSearch","props","inputRef","id","Math","random","toString","substring","useState","options","dataCache","setDataCache","value","setValue","useEffect","dataFilter","isOpenSearchMatch","filter","item","indexOf","handleChange","onChange","highlightKeyWord","keyWord","index","preStr","nextStr","length","className","debounceScroll","fun","timer","time","args","clearTimeout","setTimeout","apply","debounce","onScrollButtom","labelName","htmlFor","style","width","disabled","placeholder","maxLength","e","target","onKeyPress","nativeEvent","keyCode","blur","onSearch","currentTarget","ref","element","SearchOutlined","onScroll","stopPropagation","scrollTop","clientHeight","scrollHeight","maxHeight","loading","right","top","map","onMouseDown","onClick","handleClick","CopyToClipboard","require","customizeRenderEmpty","justify","align","height","flexDirection","src","emptyImg","alt","ResizableTitle","onResize","restProps","Resizable","handle","draggableOpts","enableUserSelectHack","userSelect","exportDataVisible","setExportDataVisible","header","data","dataFormat","setDataFormat","filterValue","setFilterValue","columns","cols","setCols","handleResize","_","size","temp","tableWidth","reduce","pre","next","localStorage","setItem","tableKey","JSON","stringify","setCurrentTableScroll","currentTableScroll","x","customColumns","col","onHeaderCell","column","scroll","dataSource","dataIndex","handdleFilterHeader","dataColumns","sheetHeader","title","tarData","forEach","dataRow","row","colName","res","push","handleExportJira","str","join","rowKey","Object","values","handleExportText","direction","maskClosable","centered","bodyStyle","overflow","visible","onCancel","footer","position","label","defaultValue","bottom","type","tab","text","onCopy","message","cursor","minHeight","option","datas","sheetData","sheetName","ExportJsonExcel","saveExcel","titleNode","buttonNode","cancelExportData","marginLeft","renderEmpty","components","cell","pagination","rowSelection","Title","Typography","styles","noBorderBottom","borderBottom","level","marginBottom","breadcrumbs","children","Form","form","updateState","React","formData","setFieldsValue","currentChange","allValues","formChangeRes","setFormChangeRes","destroyOnClose","okText","cancelText","resetFields","onOk","console","log","getFieldsValue","validateFields","then","onCreate","catch","info","spinning","onValuesChange","labelCol","span","wrapperCol","layout","name","prototype","call","Option","Select","collapsed","setCollapsed","formatParamsData","indexKey","params","paramsData","setParamsData","currentParamsData","setCurrentParamsData","Map","paramsDataMap","setParamsDataMap","group","key","undefined","i","j","used","formatData","dataMap","param","set","handleFinishForm","preVal","tarVal","handleRenderValueEl","getFieldValue","onPressEnter","handlePressEnter","currentItem","get","defalutValue","placeHolder","currentOptions","dropdownMatchSelectWidth","showSearch","mode","optionFilterProp","onFinish","initialValues","gutter","marginRight","fields","add","remove","field","compact","noStyle","rules","required","usedKey","includes","selectActionRemove","display","shouldUpdate","DeleteOutlined","PlusOutlined","flex","htmlType","DownOutlined","UpOutlined","calculateId","strList","split","charCodeAt","DynamicForm","current","setCurrent","config","currentConfig","_setCurrentConfig","currentConfigRef","useRef","setCurrentConfig","configGroup","currentConfigGroup","_setCurrentConfigGroup","currentConfigGroupRef","setCurrentConfigGroup","resetFieldProps","linkageConfig","optionInlinkAge","configItem","dep","valueId","effect","effectOption","findOptionInLinkAge","tarConfig","setValueInConfig","tarConfigGroup","configList","setValueInConfigGroup","keys","formValues","entries","renderInput","itemProps","initialValue","extra","description","dangerouslySetInnerHTML","__html","disable","renderInputSelect","renderTextArea","autoSize","minRows","renderSelect","multiple","retry_info","onRetryInfoChange","renderRadio","renderDatePicker","showTime","disabledDate","moment","endOf","renderRangePicker","dispatchRenderFormItem","renderFormItem","list","restField","listItem","offset","danger","block","icon","MinusCircleOutlined","primaryKey","hidden","Step","currentConfigGroupNameList","err","TaskListManager","navigate","useNavigate","location","useLocation","dataList","setDataList","setLoading","loadingAdd","setLoadingAdd","getParam","visableAdd","setVisableAdd","loadingUpdate","setLoadingUpdate","visableUpdate","setVisableUpdate","loadingDetail","setLoadingDetail","visableDetail","setVisableDetail","selectedRowKeys","setSelectedRowKeys","startTime","subtract","startOf","format","endTime","pageInfoInit","pageSize","total","showSizeChanger","showQuickJumper","pageSizeOptions","showTotal","pageInfo","setPageInfo","currentColumns","setCurrentColumns","filterParams","setFilterParams","filterValues","_setFilterValues","filterValuesRef","setFilterValues","dynamicFormConfigAdd","setDynamicFormConfigAdd","dynamicFormConfigUpdate","setDynamicFormConfigUpdate","dynamicFormGroupConfigAdd","setDynamicFormGroupConfigAdd","dynamicFormGroupConfigUpdate","setDynamicFormGroupConfigUpdate","customFormData","parse","dynamicFormDataAdd","setDynamicFormDataAdd","updateColumnsMap","setUpdateColumnsMap","labelMap","_setLabelMap","labelMapRef","dataDetail","setDataDetail","setTableWidth","permissions","setPermissions","filterParamsMap","setFilterParamsMap","helpUrl","setHelpUrl","baseUrl","_setBaseUrl","baseUrlRef","isImportData","setIsImportData","isDownLoadData","setIsDownLoadData","columnRelateFormat","setColumnRelateFormat","multipleAction","setMultipleAction","sorterParam","setSorterParam","setPrimaryKey","labelTitle","setLabelTitle","list_ui_type","setList_ui_type","list_ui_args","setList_ui_args","listColumns","setListColumns","scrollY","setScrollY","fetchDataParams","pageConf","paramsMap","sorter","getTableScroll","createDyFormConfig","label_columns","description_columns","validators","pattern","RegExp","regex","min","max","default","targetId","url","getADUGTemplateApiInfo","list_columns","filters","add_columns","edit_columns","add_fieldsets","edit_fieldsets","help_url","order_columns","action","route_base","column_related","primary_key","label_title","cols_width","import_data","download_data","hasAction","related","cacheColumns","getItem","pathname","cacheColumnsWidthMap","columnRelatedFormat","src_columns","des_columns","ePre","eNext","src_value","des_value","a","b","render","record","placement","tarRes","actionList","singleAction","single","tableAction","fixed","overlay","fetchDataDetail","formConfigUpdate","formGroupConfigUpdate","currentData","expanded","Modal","ExclamationCircleOutlined","content","okButtonProps","Promise","resolve","reject","actionADUGTemplateDelete","fetchData","confirmation","actionADUGTemplateSingle","result","link","window","open","tarColumns","addColumnsMap","reTryInfoQuene","reTryInfoFlag","formRes","hasOwnProperty","handleReTryInfo","tar","actionADUGTemplateRetryInfo","exist_add_args","formConfigAdd","formGroupConfigAdd","formReset","resTar","finally","itemInfo","tarFilter","oprList","operator","currentFilterValues","localCacheFilter","search","urlFilter","error","localFilter","setLabelMap","currentTableWidth","form_data","temlateId","str_related","model_name","opr","sourceOprList","currentOpr","page","page_size","getADUGTemplateList","count","getADUGTemplateDetail","detail","formatValue","last_name","uploadConfig","maxCount","headers","authorization","beforeUpload","file","isCSV","Upload","status","notification","response","Array","isArray","actionADUGTemplateAdd","tarIndex","listItemKey","listItemValue","actionADUGTemplateUpdate","whiteSpace","isSubRoute","reload","RollbackOutlined","crumbs","idx","QuestionCircleOutlined","TableBox","actionADUGTemplateMuliple","ids","handleMultiRecord","color","origin","UploadOutlined","ExportOutlined","tarSorter","order","order_column","columnKey","order_direction","columnWidth","y","rowIndex","overflowY","card_width","card_height","itemIndex","wordBreak"],"sourceRoot":""}